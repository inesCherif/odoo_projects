)]}'
{"version": 3, "sources": ["/web/static/tests/legacy/helpers/test_utils_file.js", "/mail/static/tests/tours/discuss_public_tour.js", "/mail/static/tests/tours/mail_channel_as_guest_tour.js", "/mail/static/tests/tours/mail_full_composer_test_tour.js", "/mail/static/tests/tours/user_modify_own_profile_tour.js", "/portal/static/tests/tours/portal.js", "/account/static/tests/tours/account_dashboard_setup_bar_tests.js", "/account/static/tests/tours/tax_group_tests.js", "/project/static/tests/tours/personal_stage_tour.js", "/project/static/tests/tours/project_burndown_chart_tour.js", "/project/static/tests/tours/project_sharing_tour.js", "/project/static/tests/tours/project_update_tour_tests.js", "/contacts/static/tests/tours/debug_menu_set_defaults.js", "/hr/static/tests/tours/hr_employee_flow.js", "/hr/static/tests/tours/user_modify_own_profile_tour.js", "/survey/static/tests/tours/certification_failure.js", "/survey/static/tests/tours/certification_success.js", "/survey/static/tests/tours/survey.js", "/survey/static/tests/tours/survey_prefill.js", "/survey/static/tests/tours/survey_session_manage_test.js", "/survey/static/tests/tours/survey_tour_session_create.js", "/survey/static/tests/tours/survey_tour_session_manage.js", "/survey/static/tests/tours/survey_tour_session_start.js", "/survey/static/tests/tours/survey_tour_session_tools.js", "/auth_totp/static/tests/totp_flow.js", "/auth_totp_mail/static/tests/totp_flow.js", "/auth_totp_portal/static/tests/totp_portal.js"], "mappings": "AAAA;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC9JA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AC9BA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AC/BA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACxFA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AC1BA;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACtBA;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC1CA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AClHA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AC/DA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AC/EA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACnpLA;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC1EA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AC7BA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACnpGA;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACtrCA;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACpcA;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChCA;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrBA;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnVA;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC3EA;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA", "sourcesContent": ["odoo.define('web.test_utils_file', function () {\n\"use strict\";\n\n/**\n * FILE Test Utils\n *\n * This module defines various utility functions to help simulate events with\n * files, such as drag-and-drop.\n *\n * Note that all methods defined in this module are exported in the main\n * testUtils file.\n */\n\n\n//------------------------------------------------------------------------------\n// Private functions\n//------------------------------------------------------------------------------\n\n/**\n * Create a fake object 'dataTransfer', linked to some files, which is passed to\n * drag and drop events.\n *\n * @param {Object[]} files\n * @returns {Object}\n */\nfunction _createFakeDataTransfer(files) {\n    return {\n        dropEffect: 'all',\n        effectAllowed: 'all',\n        files,\n        getData: function () {\n            return files;\n        },\n        items: [],\n        types: ['Files'],\n    };\n}\n\n//------------------------------------------------------------------------------\n// Public functions\n//------------------------------------------------------------------------------\n\n/**\n * Create a file object, which can be used for drag-and-drop.\n *\n * @param {Object} data\n * @param {string} data.name\n * @param {string} data.content\n * @param {string} data.contentType\n * @returns {Promise<Object>} resolved with file created\n */\nfunction createFile(data) {\n    // Note: this is only supported by Chrome, and does not work in Incognito mode\n    return new Promise(function (resolve, reject) {\n        var requestFileSystem = window.requestFileSystem || window.webkitRequestFileSystem;\n        if (!requestFileSystem) {\n            throw new Error('FileSystem API is not supported');\n        }\n        requestFileSystem(window.TEMPORARY, 1024 * 1024, function (fileSystem) {\n            fileSystem.root.getFile(data.name, { create: true }, function (fileEntry) {\n                fileEntry.createWriter(function (fileWriter) {\n                    fileWriter.onwriteend = function (e) {\n                        fileSystem.root.getFile(data.name, {}, function (fileEntry) {\n                            fileEntry.file(function (file) {\n                                resolve(file);\n                            });\n                        });\n                    };\n                    fileWriter.write(new Blob([ data.content ], { type: data.contentType }));\n                });\n            });\n        });\n    });\n}\n\n/**\n * Drag a file over a DOM element\n *\n * @param {$.Element} $el\n * @param {Object} file must have been created beforehand (@see createFile)\n */\nfunction dragoverFile($el, file) {\n    var ev = new Event('dragover', { bubbles: true });\n    Object.defineProperty(ev, 'dataTransfer', {\n        value: _createFakeDataTransfer(file),\n    });\n    $el[0].dispatchEvent(ev);\n}\n\n/**\n * Drop a file on a DOM element.\n *\n * @param {$.Element} $el\n * @param {Object} file must have been created beforehand (@see createFile)\n */\nfunction dropFile($el, file) {\n    var ev = new Event('drop', { bubbles: true, });\n    Object.defineProperty(ev, 'dataTransfer', {\n        value: _createFakeDataTransfer([file]),\n    });\n    $el[0].dispatchEvent(ev);\n}\n\n/**\n * Drop some files on a DOM element.\n *\n * @param {$.Element} $el\n * @param {Object[]} files must have been created beforehand (@see createFile)\n */\nfunction dropFiles($el, files) {\n    var ev = new Event('drop', { bubbles: true, });\n    Object.defineProperty(ev, 'dataTransfer', {\n        value: _createFakeDataTransfer(files),\n    });\n    $el[0].dispatchEvent(ev);\n}\n\n/**\n * Set files in a file input\n *\n * @param {DOM.Element} el\n * @param {Object[]} files must have been created beforehand\n *   @see testUtils.file.createFile\n */\nfunction inputFiles(el, files) {\n    // could not use _createFakeDataTransfer as el.files assignation will only\n    // work with a real FileList object.\n    const dataTransfer = new window.DataTransfer();\n    for (const file of files) {\n        dataTransfer.items.add(file);\n    }\n    el.files = dataTransfer.files;\n    /**\n     * Changing files programatically is not supposed to trigger the event but\n     * it does in Chrome versions before 73 (which is on runbot), so in that\n     * case there is no need to make a manual dispatch, because it would lead to\n     * the files being added twice.\n     */\n    const versionRaw = navigator.userAgent.match(/Chrom(e|ium)\\/([0-9]+)\\./);\n    const chromeVersion = versionRaw ? parseInt(versionRaw[2], 10) : false;\n    if (!chromeVersion || chromeVersion >= 73) {\n        el.dispatchEvent(new Event('change'));\n    }\n}\n\n//------------------------------------------------------------------------------\n// Exposed API\n//------------------------------------------------------------------------------\n\nreturn {\n    createFile: createFile,\n    dragoverFile: dragoverFile,\n    dropFile: dropFile,\n    dropFiles,\n    inputFiles,\n};\n\n});\n", "/** @odoo-module **/\n\nimport tour from 'web_tour.tour';\n\ntour.register('mail/static/tests/tours/discuss_public_tour.js', {\n    test: true,\n}, [{\n    trigger: '.o_DiscussPublicView',\n    extraTrigger: '.o_ThreadView',\n}, {\n    content: \"Check that we are on channel page\",\n    trigger: '.o_ThreadView',\n    run() {\n        if (!window.location.pathname.startsWith('/discuss/channel')) {\n            console.error('Did not automatically redirect to channel page');\n        }\n        // Wait for modules to be loaded or failed for the next step\n        odoo.__DEBUG__.didLogInfo.then(() => {\n            const { missing, failed, unloaded } = odoo.__DEBUG__.jsModules;\n            if ([missing, failed, unloaded].some(arr => arr.length)) {\n                console.error(\"Couldn't load all JS modules.\", JSON.stringify({ missing, failed, unloaded }));\n            }\n            document.body.classList.add('o_mail_channel_public_modules_loaded');\n        });\n    },\n    extraTrigger: '.o_mail_channel_public_modules_loaded',\n}, {\n    content: \"Wait for all modules loaded check in previous step\",\n    trigger: '.o_mail_channel_public_modules_loaded',\n}]);\n", "/** @odoo-module **/\n\nimport tour from 'web_tour.tour';\n\ntour.register('mail/static/tests/tours/mail_channel_as_guest_tour.js', {\n    test: true,\n}, [{\n    content: \"Click join\",\n    trigger: '.o_WelcomeView_joinButton',\n    extraTrigger: '.o_ThreadView',\n}, {\n    content: \"Check that we are on channel page\",\n    trigger: '.o_ThreadView',\n    run() {\n        if (!window.location.pathname.startsWith('/discuss/channel')) {\n            console.error('Clicking on join button did not redirect to channel page');\n        }\n        // Wait for modules to be loaded or failed for the next step\n        odoo.__DEBUG__.didLogInfo.then(() => {\n            const { missing, failed, unloaded } = odoo.__DEBUG__.jsModules;\n            if ([missing, failed, unloaded].some(arr => arr.length)) {\n                console.error(\"Couldn't load all JS modules.\", JSON.stringify({ missing, failed, unloaded }));\n            }\n            document.body.classList.add('o_mail_channel_as_guest_tour_modules_loaded');\n        });\n    },\n    extraTrigger: '.o_mail_channel_as_guest_tour_modules_loaded',\n}, {\n    content: \"Wait for all modules loaded check in previous step\",\n    trigger: '.o_mail_channel_as_guest_tour_modules_loaded',\n}]);\n", "/** @odoo-module **/\n\nimport {\n    createFile,\n    inputFiles,\n} from 'web.test_utils_file';\n\nimport tour from 'web_tour.tour';\n\n/**\n * This tour depends on data created by python test in charge of launching it.\n * It is not intended to work when launched from interface. It is needed to test\n * an action (action manager) which is not possible to test with QUnit.\n * @see mail/tests/test_mail_full_composer.py\n */\ntour.register('mail/static/tests/tours/mail_full_composer_test_tour.js', {\n    test: true,\n}, [{\n    content: \"Click on Send Message\",\n    trigger: '.o_ChatterTopbar_buttonSendMessage',\n}, {\n    content: \"Write something in composer\",\n    trigger: '.o_ComposerTextInput_textarea',\n    run: 'text blahblah',\n}, {\n    content: \"Add one file in composer\",\n    trigger: '.o_Composer_buttonAttachment',\n    async run() {\n        const file = await createFile({\n            content: 'hello, world',\n            contentType: 'text/plain',\n            name: 'text.txt',\n        });\n        const messaging = await odoo.__DEBUG__.messaging;\n        const uploader = messaging.models['ComposerView'].all()[0].fileUploader;\n        inputFiles(\n            uploader.fileInput,\n            [file]\n        );\n    },\n}, {\n    content: \"Open full composer\",\n    trigger: '.o_Composer_buttonFullComposer',\n    extra_trigger: '.o_AttachmentCard:not(.o-isUploading)' // waiting the attachment to be uploaded\n}, {\n    content: \"Check the earlier provided attachment is listed\",\n    trigger: '.o_AttachmentCard[title=\"text.txt\"]',\n    run() {},\n}, {\n    content: \"Check subject is autofilled\",\n    trigger: '[name=\"subject\"] input',\n    run() {\n        const subjectValue = document.querySelector('[name=\"subject\"] input').value;\n        if (subjectValue !== \"Re: Test User\") {\n            console.error(\n                `Full composer should have \"Re: Test User\" in subject input (actual: ${subjectValue})`\n            );\n        }\n    },\n}, {\n    content: \"Check composer content is kept\",\n    trigger: '.o_field_html[name=\"body\"]',\n    run() {\n        const bodyContent = document.querySelector('.o_field_html[name=\"body\"]').textContent;\n        if (!bodyContent.includes(\"blahblah\")) {\n            console.error(\n                `Full composer should contain text from small composer (\"blahblah\") in body input (actual: ${bodyContent})`\n            );\n        }\n    },\n}, {\n    content: \"Open templates\",\n    trigger: '.o_field_widget[name=\"template_id\"] input',\n}, {\n    content: \"Check a template is listed\",\n    in_modal: false,\n    trigger: '.ui-autocomplete .ui-menu-item a:contains(\"Test template\")',\n    run() {},\n}, {\n    content: \"Send message\",\n    trigger: '.o_mail_send',\n}, {\n    content: \"Check message is shown\",\n    trigger: '.o_Message:contains(\"blahblah\")',\n}, {\n    content: \"Check message contains the attachment\",\n    trigger: '.o_Message .o_AttachmentCard_filename:contains(\"text.txt\")',\n}]);\n", "/** @odoo-module **/\n\nimport tour from 'web_tour.tour';\n\n/**\n * Verify that a user can modify their own profile information.\n */\ntour.register('mail/static/tests/tours/user_modify_own_profile_tour.js', {\n    test: true,\n}, [{\n    content: 'Open user account menu',\n    trigger: '.o_user_menu button',\n}, {\n    content: \"Open preferences / profile screen\",\n    trigger: '[data-menu=settings]',\n}, {\n    content: \"Update the email address\",\n    trigger: 'div[name=\"email\"] input',\n    run: 'text updatedemail@example.com',\n}, {\n    content: \"Save the form\",\n    trigger: 'button[name=\"preference_save\"]',\n}, {\n    content: \"Wait until the modal is closed\",\n    trigger: 'body:not(.modal-open)',\n}]);\n", "odoo.define('portal.tour', function (require) {\n'use strict';\n\nvar tour = require(\"web_tour.tour\");\n\ntour.register('portal_load_homepage', {\n    test: true,\n    url: '/my',\n},\n    [\n        {\n            content: \"Check portal is loaded\",\n            trigger: 'a[href*=\"/my/account\"]:contains(\"Edit\"):first',\n        },\n        {\n            content: \"Load my account details\",\n            trigger: 'input[value=\"Joel Willis\"]'\n        }\n    ]\n);\n\n});\n", "odoo.define('account.dashboard.setup.tour', function (require) {\n    \"use strict\";\n\n    var core = require('web.core');\n    var tour = require('web_tour.tour');\n\n    var _t = core._t;\n\n    tour.register('account_render_report', {\n        test: true,\n        url: '/web',\n    }, [tour.stepUtils.showAppsMenuItem(),\n    {\n        id: 'account_menu_click',\n        trigger: '.o_app[data-menu-xmlid=\"account.menu_finance\"]',\n        position: 'bottom',\n    }, {\n        trigger: '.o_data_row:first .o_data_cell',\n        extra_trigger: '.breadcrumb',\n    }, {\n        trigger: '.o_control_panel button:contains(\"' + _t('Print') + '\")',\n    }, {\n        trigger: '.o_control_panel .o-dropdown--menu span:contains(\"' + _t('Invoices without Payment') + '\")',\n    }, {\n        trigger: 'iframe .o_report_layout_standard h2',\n        content: 'Primary color is correct',\n        run: function () {\n            if (this.$anchor.css('color') !== \"rgb(18, 52, 86)\") {\n                console.error('The primary color should be the one set on the company.');\n            }\n        },\n    }, {\n        trigger: 'iframe .o_report_layout_standard #informations div strong',\n        content: 'Secondary color is correct',\n        run: function () {\n            if (this.$anchor.css('color') !== \"rgb(120, 145, 1)\") {\n                console.error('The secondary color should be the one set on the company.');\n            }\n        },\n    }\n        ]);\n});\n", "/** @odoo-module alias=account.tax.group.tour.tests */\n\"use strict\";\n\nimport tour from 'web_tour.tour';\n\ntour.register('account_tax_group', {\n    test: true,\n    url: \"/web\",\n}, [tour.stepUtils.showAppsMenuItem(),\n    {\n        content: \"Go to Invoicing\",\n        trigger: '.o_app[data-menu-xmlid=\"account.menu_finance\"]',\n        edition: 'community',\n    },\n    {\n        content: \"Go to Accounting\",\n        trigger: '.o_app[data-menu-xmlid=\"account_accountant.menu_accounting\"]',\n        edition: 'enterprise',\n    },\n    {\n        content: \"Go to Vendors\",\n        trigger: 'a:contains(\"Vendors\")',\n    },\n    {\n        content: \"Go to Bills\",\n        trigger: 'span:contains(\"Bills\")',\n    },\n    {\n        extra_trigger: '.breadcrumb:contains(\"Bills\")',\n        content: \"Create new bill\",\n        trigger: '.o_list_button_add',\n    },\n    // Set a vendor\n    {\n        content: \"Add vendor\",\n        trigger: 'div.o_field_widget.o_field_many2one[name=\"partner_id\"] div input',\n        run: 'text Azure Interior',\n    },\n    {\n        content: \"Valid vendor\",\n        trigger: '.ui-menu-item a:contains(\"Azure Interior\")',\n    },\n    // Add First product\n    {\n        content: \"Add items\",\n        trigger: 'div[name=\"invoice_line_ids\"] .o_field_x2many_list_row_add a:contains(\"Add a line\")',\n    },\n    {\n        content: \"Select input\",\n        trigger: 'div[name=\"invoice_line_ids\"] .o_list_view .o_selected_row .o_list_many2one:first input',\n    },\n    {\n        content: \"Type item\",\n        trigger: 'div[name=\"invoice_line_ids\"] .o_list_view .o_selected_row .o_list_many2one:first input',\n        run: \"text Large Desk\",\n    },\n    {\n        content: \"Valid item\",\n        trigger: '.ui-menu-item-wrapper:contains(\"Large Desk\")',\n    },\n    // Save account.move\n    {\n        content: \"Save the account move\",\n        trigger: '.o_form_button_save',\n    },\n    // Edit tax group amount\n    {\n        content: \"Edit tax group amount\",\n        trigger: '.o_tax_group_edit',\n    },\n    {\n        content: \"Modify the input value\",\n        trigger: '.o_tax_group_edit_input input',\n        run: function (actions) {\n            $('.o_tax_group_edit_input input').val(200);\n            $('.o_tax_group_edit_input input').select();\n            $('.o_tax_group_edit_input input').blur();\n        },\n    },\n    // Check new value for total (with modified tax_group_amount).\n    {\n        content: \"Valid total amount\",\n        trigger: 'span[name=\"amount_total\"]:contains(\"1,499.00\")',\n    },\n    // Modify the quantity of the object\n    {\n        content: \"Select item quantity\",\n        trigger: 'div[name=\"invoice_line_ids\"] .o_list_view tbody tr.o_data_row .o_list_number[title=\"1.00\"]',\n    },\n    {\n        content: \"Change item quantity\",\n        trigger: 'div[name=\"invoice_line_ids\"] .o_list_view tbody tr.o_data_row .o_list_number[title=\"1.00\"] input',\n        run: 'text 2',\n    },\n    {\n        content: \"Valid the new value\",\n        trigger: 'div[name=\"invoice_line_ids\"] .o_list_view tbody tr.o_data_row .o_list_number[title=\"1.00\"] input',\n        run: function (actions) {\n            let keydownEvent = jQuery.Event('keydown');\n            keydownEvent.which = 13;\n            this.$anchor.trigger(keydownEvent);\n        },\n    },\n    // Save form\n    {\n        content: \"Save the account move\",\n        trigger: '.o_form_button_save',\n    },\n    // Check new tax group value\n    {\n        content: \"Check new value of tax group\",\n        trigger: '.o_tax_group_amount_value:contains(\"389.70\")',\n    },\n]);\n", "/** @odoo-module */\n\nimport tour from 'web_tour.tour';\n\ntour.register('personal_stage_tour', {\n    test: true,\n    url: '/web',\n},\n[tour.stepUtils.showAppsMenuItem(), {\n    trigger: '.o_app[data-menu-xmlid=\"project.menu_main_pm\"]',\n}, {\n    content: \"Open Pig Project\",\n    trigger: '.o_kanban_record:contains(\"Pig\")',\n}, {\n    // Default is grouped by stage, user should not be able to create/edit a column\n    content: \"Check that there is no create column\",\n    trigger: \"body:not(.o_column_quick_create)\",\n    run: function () {},\n}, {\n    content: \"Check that there is no create column\",\n    trigger: \"body:not(.o_column_edit)\",\n    run: function () {},\n}, {\n    content: \"Check that there is no create column\",\n    trigger: \"body:not(.o_column_delete)\",\n    run: function () {},\n}, {\n    content: \"Go to my tasks\", // My tasks is grouped by personal stage by default\n    trigger: 'a[data-menu-xmlid=\"project.menu_project_management\"]',\n}, {\n    content: \"Check that we can create a new stage\",\n    trigger: '.o_column_quick_create .o_quick_create_folded'\n}, {\n    content: \"Create a new personal stage\",\n    trigger: 'input.form-control.o_input',\n    run: 'text Never',\n}, {\n    content: \"Confirm create\",\n    trigger: '.o_kanban_add',\n}, {\n    content: \"Check that column exists\",\n    trigger: '.o_kanban_header:contains(\"Never\")',\n    run: function () {},\n}, {\n    content: 'Open column edit dropdown',\n    trigger: '.o_kanban_header:eq(0)',\n    run: function () {\n        document.querySelector('.o_kanban_config.dropdown .dropdown-toggle').dispatchEvent(new Event('click'));\n    },\n}, {\n    content: \"Try editing inbox\",\n    trigger: \".dropdown-item.o_column_edit\",\n}, {\n    content: \"Change title\",\n    trigger: 'div.o_field_char[name=\"name\"] input',\n    run: 'text  (Todo)',\n}, {\n    content: \"Save changes\",\n    trigger: '.btn-primary:contains(\"Save\")',\n}, {\n    content: \"Check that column was updated\",\n    trigger: '.o_kanban_header:contains(\"Todo\")',\n}]);\n", "/** @odoo-module */\n\nimport tour from 'web_tour.tour';\n\ntour.register('burndown_chart_tour', {\n    test: true,\n    url: '/web',\n},\n[tour.stepUtils.showAppsMenuItem(), {\n    trigger: '.o_app[data-menu-xmlid=\"project.menu_main_pm\"]',\n}, {\n    content: 'Open \"Burndown Chart Test\" project menu',\n    trigger: '.o_kanban_record:contains(\"Burndown Chart Test\") .o_kanban_manage_toggle_button',\n}, {\n    content: `Open \"Burndown Chart Test\" project's \"Burndown Chart\" view`,\n    trigger: '.o_kanban_record:contains(\"Burndown Chart Test\") .o_kanban_manage_reporting div[role=\"menuitem\"] a:contains(\"Burndown Chart\")',\n}, {\n    content: 'The sort buttons are not rendered',\n    trigger: '.o_cp_bottom_left:not(:has(.btn-group[role=toolbar][aria-label=\"Sort graph\"]))',\n    extra_trigger: '.o_graph_renderer',\n}, {\n    content: 'Remove the project search \"Burndown Chart Test\"',\n    trigger: '.o_searchview_facet:contains(\"Burndown Chart Test\") .o_facet_remove',\n}, {\n    content: 'Search Burndown Chart',\n    trigger: 'input.o_searchview_input',\n    run: `text Burndown`,\n}, {\n    content: 'Validate search',\n    trigger: '.o_searchview_autocomplete .o_menu_item:contains(\"Project\")',\n}, {\n    content: 'Remove the group by \"Date: Month > Stage\"',\n    trigger: '.o_searchview_facet:contains(\"Date: Month\") .o_facet_remove',\n}, {\n    content: 'A \"The Burndown Chart must be grouped by Date and Stage\" notification is shown when trying to remove the group by \"Date: Month > Stage\"',\n    trigger: '.o_notification_manager .o_notification:contains(\"The Burndown Chart must be grouped by Date and Stage\") button.o_notification_close',\n}, {\n    content: 'Open the group by menu',\n    trigger: '.o_group_by_menu button',\n}, {\n    content: 'The Stage group menu item is invisible',\n    trigger: '.o_group_by_menu:not(:has(.o_menu_item:contains(\"Stage\")))',\n}, {\n    content: 'Open the Date group by sub menu',\n    trigger: '.o_group_by_menu button.o_menu_item:contains(\"Date\")',\n    run: function () {\n        this.$anchor[0].dispatchEvent(new Event('mouseenter'));\n    },\n}, {\n    content: 'Click on the selected Date sub menu',\n    trigger: '.o_group_by_menu button.o_menu_item:contains(\"Date\") + * .dropdown-item.selected',\n    run: function () {\n        this.$anchor[0].dispatchEvent(new Event('click'));\n    },\n}, {\n    content: 'A \"The Burndown Chart must be grouped by Date\" notification is shown when trying to remove the group by \"Date: Month > Stage\"',\n    trigger: '.o_notification_manager .o_notification:contains(\"The Burndown Chart must be grouped by Date\") button.o_notification_close',\n}, {\n    content: 'Open the filter menu',\n    trigger: '.o_filter_menu button',\n}, {\n    content: 'Open the Date filter sub menu',\n    trigger: '.o_filter_menu button.o_menu_item:contains(\"Date\")',\n    run: function () {\n        this.$anchor[0].dispatchEvent(new Event('mouseenter'));\n    },\n}, {\n    content: 'Click on the first Date filter sub menu',\n    trigger: '.o_filter_menu .o_menu_item:contains(\"Date\") + * .dropdown-item:first-child',\n    run: function () {\n        this.$anchor[0].dispatchEvent(new Event('click'));\n    },\n}, {\n    content: 'Close the Date filter menu',\n    trigger: '.o_graph_renderer',\n}, {\n    content: 'The comparison menu is not rendered',\n    trigger: '.o_search_options:not(:has(.o_comparison_menu))',\n}]);\n", "/** @odoo-module **/\n\nimport tour from 'web_tour.tour';\n\nconst projectSharingSteps = [...tour.stepUtils.goToAppSteps(\"project.menu_main_pm\", 'Go to the Project App.'), {\n    trigger: '.oe_kanban_global_click :contains(\"Project Sharing\") button.o_dropdown_kanban',\n    content: 'Open the project dropdown.'\n}, {\n    trigger: '.o_kanban_record:contains(\"Project Sharing\") .dropdown-menu a:contains(\"Share\")',\n    content: 'Start editing the project.',\n}, {\n    trigger: 'div.o_field_radio[name=\"access_mode\"] div.o_radio_item > input[data-value=\"edit\"]',\n    content: 'Select \"Edit\" as Access mode in the \"Share Project\" wizard.',\n}, {\n    trigger: '.o_field_many2many_tags_email[name=partner_ids]',\n    content: 'Select the user portal as collaborator to the \"Project Sharing\" project.',\n    run: function (actions) {\n        actions.text('Georges', this.$anchor.find('input'));\n    },\n}, {\n    trigger: '.ui-autocomplete a.dropdown-item:contains(\"Georges\")',\n    in_modal: false,\n}, {\n    trigger: 'footer > button[name=\"action_send_mail\"]',\n    content: 'Confirm the project sharing with this portal user.',\n}, {\n    trigger: '.o_web_client',\n    content: 'Go to project portal view to select the \"Project Sharing\" project',\n    run: function () {\n        window.location.href = window.location.origin + '/my/projects';\n    },\n}, {\n    id: 'project_sharing_feature',\n    trigger: 'table > tbody > tr a:has(span:contains(Project Sharing))',\n    content: 'Select \"Project Sharing\" project to go to project sharing feature for this project.',\n}, {\n    trigger: '.o_project_sharing',\n    content: 'Wait the project sharing feature be loaded',\n    run: function () {},\n}, {\n    trigger: 'button.o-kanban-button-new',\n    content: 'Click \"Create\" button',\n    run: 'click',\n}, {\n    trigger: '.o_kanban_quick_create .o_field_widget[name=\"name\"] input',\n    content: 'Create Task',\n    run: 'text Test Create Task',\n}, {\n    trigger: '.o_kanban_quick_create .o_kanban_edit',\n    content: 'Go to the form view of this new task',\n}, {\n    trigger: 'div[name=\"stage_id\"] div.o_statusbar_status button[aria-checked=\"false\"]:contains(Done)',\n    content: 'Change the stage of the task.',\n}, {\n    trigger: '.o_portal_chatter_composer_input .o_portal_chatter_composer_body textarea',\n    content: 'Write a message in the chatter of the task',\n    run: 'text I create a new task for testing purpose.',\n}, {\n    trigger: '.o_portal_chatter_composer_input .o_portal_chatter_composer_body button[name=\"send_message\"]',\n    content: 'Send the message',\n}, {\n    trigger: 'ol.breadcrumb > li.o_back_button > a:contains(Project Sharing)',\n    content: 'Go back to the kanban view',\n}, {\n    trigger: '.o_filter_menu > button',\n    content: 'click on filter menu in the search view',\n}, {\n    trigger: '.o_filter_menu > .dropdown-menu > .dropdown-item:first-child',\n    content: 'click on the first item in the filter menu',\n}, {\n    trigger: '.o_group_by_menu > button',\n    content: 'click on group by menu in the search view',\n}, {\n    trigger: '.o_group_by_menu > .dropdown-menu > .dropdown-item:first-child',\n    content: 'click on the first item in the group by menu',\n}, {\n    trigger: '.o_favorite_menu > button',\n    content: 'click on the favorite menu in the search view',\n}, {\n    trigger: '.o_favorite_menu .o_add_favorite > button',\n    content: 'click to \"save current search\" button in favorite menu',\n}, {\n    trigger: '.o_filter_menu > button',\n    content: 'click on filter menu in the search view',\n}, {\n    trigger: '.o_filter_menu > .dropdown-menu > .dropdown-item:first-child',\n    content: 'click on the first item in the filter menu',\n}, {\n    trigger: '.o_group_by_menu > button',\n    content: 'click on group by menu in the search view',\n}, {\n    trigger: '.o_group_by_menu > .dropdown-menu > .dropdown-item:first-child',\n    content: 'click on the first item in the group by menu',\n}, {\n    trigger: '.o_favorite_menu > button',\n    content: 'click on the favorite menu in the search view',\n}, {\n    trigger: '.o_favorite_menu .o_add_favorite > button',\n    content: 'click to \"save current search\" button in favorite menu',\n}, {\n    trigger: 'button.o_switch_view.o_list',\n    content: 'Go to the list view',\n}];\n\ntour.register('project_sharing_tour', {\n    test: true,\n    url: '/web',\n}, projectSharingSteps);\n\n// The begining of the project sharing feature\nconst projectSharingStepIndex = projectSharingSteps.findIndex(s => s.id && s.id === 'project_sharing_feature');\ntour.register('portal_project_sharing_tour', {\n    test: true,\n    url: '/my/projects',\n}, projectSharingSteps.slice(projectSharingStepIndex, projectSharingSteps.length));\n", "/** @odoo-module **/\n\nimport tour from 'web_tour.tour';\n\nfunction openProjectUpdateAndReturnToTasks(view, viewClass) {\n    const legacyViewClass = viewClass.replace(\"o_\", \"o_legacy_\");\n    return [{\n            trigger: '.o_project_updates_breadcrumb',\n            content: 'Open Project Update from view : ' + view,\n            extra_trigger: `.${viewClass}, .${legacyViewClass}`,\n        }, {\n            trigger: \".o-kanban-button-new\",\n            content: \"Create a new update from project task view : \" + view,\n            extra_trigger: '.o_pupdate_kanban',\n        }, {\n            trigger: \"button.o_form_button_cancel\",\n            content: \"Discard project update from project task view : \" + view,\n        }, {\n            trigger: \".o_switch_view.o_list\",\n            content: \"Go to list of project update from view \" + view,\n        }, {\n            trigger: '.o_back_button',\n            content: 'Go back to the task view : ' + view,\n            // extra_trigger: '.o_list_view, .o_legacy_list_view', // FIXME: [XBO] uncomment it when the sample data will be displayed after discarding the creation of a project update record.\n        },\n    ];\n}\n\ntour.register('project_update_tour', {\n    test: true,\n    url: '/web',\n},\n[tour.stepUtils.showAppsMenuItem(), {\n    trigger: '.o_app[data-menu-xmlid=\"project.menu_main_pm\"]',\n}, {\n    trigger: '.o-kanban-button-new',\n    extra_trigger: '.o_project_kanban',\n    width: 200,\n}, {\n    trigger: '.o_project_name input',\n    run: 'text New Project'\n}, {\n    trigger: '.o_open_tasks',\n    run: function (actions) {\n        actions.auto('.modal:visible .btn.btn-primary');\n    },\n}, {\n    trigger: \".o_kanban_project_tasks .o_column_quick_create .input-group\",\n    run: function (actions) {\n        actions.text(\"New\", this.$anchor.find(\"input\"));\n    },\n}, {\n    trigger: \".o_kanban_project_tasks .o_column_quick_create .o_kanban_add\",\n    auto: true,\n}, {\n    trigger: \".o_kanban_project_tasks .o_column_quick_create .input-group\",\n    extra_trigger: '.o_kanban_group',\n    run: function (actions) {\n        actions.text(\"Done\", this.$anchor.find(\"input\"));\n    },\n}, {\n    trigger: \".o_kanban_project_tasks .o_column_quick_create .o_kanban_add\",\n    auto: true,\n}, {\n    trigger: '.o-kanban-button-new',\n    extra_trigger: '.o_kanban_group:eq(0)'\n}, {\n    trigger: '.o_kanban_quick_create div.o_field_char[name=name] input',\n    extra_trigger: '.o_kanban_project_tasks',\n    run: 'text New task'\n}, {\n    trigger: '.o_kanban_quick_create .o_kanban_add',\n    extra_trigger: '.o_kanban_project_tasks'\n}, {\n    trigger: '.o-kanban-button-new',\n    extra_trigger: '.o_kanban_group:eq(0)'\n}, {\n    trigger: '.o_kanban_quick_create div.o_field_char[name=name] input',\n    extra_trigger: '.o_kanban_project_tasks',\n    run: 'text Second task'\n}, {\n    trigger: '.o_kanban_quick_create .o_kanban_add',\n    extra_trigger: '.o_kanban_project_tasks'\n}, {\n    trigger: '.o_kanban_group:nth-child(2) .o_kanban_header',\n    run: function () {\n        document.querySelector('.o_kanban_group:nth-child(2) .o_kanban_config.dropdown .dropdown-toggle').dispatchEvent(new Event('click'));\n    }\n}, {\n    trigger: \".dropdown-item.o_column_edit\",\n}, {\n    trigger: \".o_field_widget[name=fold] input\",\n}, {\n    trigger: \".modal-footer button\",\n}, {\n    trigger: \".o_kanban_record .oe_kanban_content\",\n    extra_trigger: '.o_kanban_project_tasks',\n    run: \"drag_and_drop .o_kanban_group:eq(1) \",\n}, {\n    trigger: \".o_project_updates_breadcrumb\",\n    content: 'Open Updates'\n}, {\n    trigger: \".o_add_milestone a\",\n    content: \"Add a first milestone\"\n}, {\n    trigger: \"div.o_field_widget[name=name] input\",\n    run: 'text New milestone'\n}, {\n    trigger: \"div[name=deadline] .datetimepicker-input\",\n    run: 'text 12/12/2099'\n}, {\n    trigger: \".modal-footer .o_form_button_save\"\n}, {\n    trigger: \".o_add_milestone a\",\n}, {\n    trigger: \"div.o_field_widget[name=name] input\",\n    run: 'text Second milestone'\n}, {\n    trigger: \"div[name=deadline] .datetimepicker-input\",\n    run: 'text 12/12/2022'\n}, {\n    trigger: \".modal-footer .o_form_button_save\"\n}, {\n    trigger: \".o_rightpanel_milestone:eq(1) .o_milestone_detail\",\n}, {\n    trigger: \"div[name=deadline] .datetimepicker-input\",\n    run: 'text 12/12/2100'\n}, {\n    trigger: \".modal-footer .o_form_button_save\"\n}, {\n    trigger: \".o-kanban-button-new\",\n    content: \"Create a new update\"\n}, {\n    trigger: \"div.o_field_widget[name=name] input\",\n    run: 'text New update'\n}, {\n    trigger: \".o_form_button_save\"\n}, {\n    trigger: \".o_field_widget[name='description'] h1:contains('Activities')\",\n    run: function () {},\n}, {\n    trigger: \".o_field_widget[name='description'] h3:contains('Milestones')\",\n    run: function () {},\n}, {\n    trigger: \".o_field_widget[name='description'] div[name='milestone'] ul li:contains('(12/12/2099 => 12/12/2100)')\",\n    run: function () {},\n}, {\n    trigger: \".o_field_widget[name='description'] div[name='milestone'] ul li span:contains('(due 12/12/2022)')\",\n    run: function () {},\n}, {\n    trigger: \".o_field_widget[name='description'] div[name='milestone'] ul li span:contains('(due 12/12/2100)')\",\n    run: function () {},\n}, {\n    trigger: '.o_back_button',\n    content: 'Go back to the kanban view the project',\n}, {\n    trigger: '.o_switch_view.o_list',\n    content: 'Open List View of Project Updates',\n}, {\n    trigger: '.o_back_button',\n    content: 'Go back to the kanban view the project',\n    extra_trigger: '.o_list_view, .o_legacy_list_view',\n}, {\n    trigger: '.o_switch_view.o_graph',\n    content: 'Open Graph View of Tasks',\n}, ...openProjectUpdateAndReturnToTasks(\"Graph\", \"o_graph_view\"), {\n    trigger: '.o_switch_view.o_list',\n    content: 'Open List View of Tasks',\n    extra_trigger: '.o_graph_view',\n}, ...openProjectUpdateAndReturnToTasks(\"List\", \"o_list_view\"), {\n    trigger: '.o_switch_view.o_pivot',\n    content: 'Open Pivot View of Tasks',\n}, ...openProjectUpdateAndReturnToTasks(\"Pivot\", \"o_pivot_view\"), {\n    trigger: '.o_switch_view.o_calendar',\n    content: 'Open Calendar View of Tasks',\n}, ...openProjectUpdateAndReturnToTasks(\"Calendar\", \"o_calendar_view\"), {\n    trigger: '.o_switch_view.o_activity',\n    content: 'Open Activity View of Tasks',\n}, ...openProjectUpdateAndReturnToTasks(\"Activity\", \"o_activity_view\"),\n]);\n", "odoo.define('debug_menu_set_defaults.tour', function (require) {\n    \"use strict\";\n\n    var tour = require('web_tour.tour');\n\n    tour.register('debug_menu_set_defaults', {\n        test: true,\n        url: '/web?debug=1',\n    },\n        [\n            ...tour.stepUtils.goToAppSteps('contacts.menu_contacts', \"Open the contacts menu\"),\n            {\n                content: \"Create a new contact\",\n                trigger: '.o-kanban-button-new',\n            },\n            {\n                content: \"Check that Company is checked by default, and not Individual\",\n                trigger: '.o_field_widget[name=\"company_type\"] input[data-value=\"company\"]:checked',\n                run: function () {},\n            },\n            {\n                content: \"Select the individual radio button\",\n                trigger: '.o_field_widget[name=\"company_type\"] input[data-value=\"person\"]',\n            },\n            {\n                content: \"Open the debug menu\",\n                trigger: '.o_debug_manager button',\n            },\n            {\n                content: \"Click the Set Defaults menu\",\n                trigger: '.o_debug_manager .dropdown-item:contains(Set Defaults)',\n            },\n            {\n                content: \"Choose Company Type = Individual\",\n                trigger: '#formview_default_fields',\n                run: function () {\n                    const element_field = document.querySelector('select#formview_default_fields');\n                    element_field.value = 'company_type';\n                    element_field.dispatchEvent(new Event(\"change\"));\n                },\n            },\n            {\n                content: \"Check that there are conditions\",\n                trigger: '#formview_default_conditions',\n            },\n            {\n                content: \"Save the new default\",\n                trigger: 'footer button:contains(Save default)',\n            },\n            {\n                content: \"Discard the contact creation\",\n                trigger: 'button.o_form_button_cancel',\n            },\n            {\n                trigger: '.o-kanban-button-new',\n            },\n            {\n                content: \"Check that Individual is checked instead of Company\",\n                trigger: '.o_field_widget[name=\"company_type\"] input[data-value=\"person\"]:checked',\n                run: function () {},\n            },\n            {\n                content: \"Discard the contact creation\",\n                trigger: 'button.o_form_button_cancel',\n            },\n            {\n                content: \"Wait for discard\",\n                trigger: '.o_control_panel .o-kanban-button-new',\n                run() {},\n            },\n        ]\n    );\n\n});\n", "/** @odoo-module **/\n\nimport tour from 'web_tour.tour';\n\ntour.register('hr_employee_tour', {\n    test: true,\n    url: '/web',\n}, [\n    tour.stepUtils.showAppsMenuItem(),\n    {\n        content: \"Open Employees app\",\n        trigger: \".o_app[data-menu-xmlid='hr.menu_hr_root']\",\n        run: 'click',\n    },\n    {\n        content: \"Open an Employee Profile\",\n        trigger: \".o_kanban_record_title:contains('Johnny H.')\",\n        run: 'click',\n    },\n    {\n        content: \"Open user account menu\",\n        trigger: \".o_user_menu .oe_topbar_name\",\n        run: 'click',\n    }, {\n        content: \"Open My Profile\",\n        trigger: \"[data-menu=settings]\",\n        run: 'click',\n    },\n]);\n", "/** @odoo-module **/\n\nimport tour from 'web_tour.tour';\n\n/**\n * As 'hr' changes the flow a bit and displays the user preferences form in a full view instead of\n * a modal, we adapt the steps of the original tour accordingly.\n */\ntour.tours['mail/static/tests/tours/user_modify_own_profile_tour.js'].steps = [{\n    content: 'Open user account menu',\n    trigger: '.o_user_menu button',\n}, {\n    content: \"Open preferences / profile screen\",\n    trigger: '[data-menu=settings]',\n}, {\n    content: \"Update the email address\",\n    trigger: 'div[name=\"email\"] input',\n    run: 'text updatedemail@example.com',\n}, ...tour.stepUtils.saveForm()];\n", "odoo.define('survey.tour_test_certification_failure', function (require) {\n'use strict';\n\nvar SurveyFormWidget = require('survey.form');\n/**\n * Speed up fade-in fade-out to avoid useless delay in tests.\n */\nSurveyFormWidget.include({\n    _submitForm: function () {\n        this.fadeInOutDelay = 0;\n        return this._super.apply(this, arguments);\n    }\n});\n\n/**\n * This tour will test that, for the demo certification allowing 2 attempts, a user can\n * try and fail twice and will no longer be able to take the certification.\n */\n\nvar tour = require('web_tour.tour');\n\nvar failSteps = [{ // Page-1\n    content: \"Clicking on Start Certification\",\n    trigger: 'button.btn.btn-primary.btn-lg:contains(\"Start Certification\")',\n}, { // Question: Do we sell Acoustic Bloc Screens?\n    content: \"Selecting answer 'No'\",\n    trigger: 'div.js_question-wrapper:contains(\"Do we sell Acoustic Bloc Screens\") label:contains(\"No\")',\n}, { // Question: Select all the existing products\n    content: \"Ticking answer 'Fanta'\",\n    trigger: 'div.js_question-wrapper:contains(\"Select all the existing products\") label:contains(\"Fanta\")'\n}, {\n    content: \"Ticking answer 'Drawer'\",\n    trigger: 'div.js_question-wrapper:contains(\"Select all the existing products\") label:contains(\"Drawer\")'\n}, {\n    content: \"Ticking answer 'Conference chair'\",\n    trigger: 'div.js_question-wrapper:contains(\"Select all the existing products\") label:contains(\"Conference chair\")'\n}, { // Question: Select all the available customizations for our Customizable Desk\n    content: \"Ticking answer 'Color'\",\n    trigger: 'div.js_question-wrapper:contains(\"Select all the available customizations for our Customizable Desk\") label:contains(\"Color\")'\n}, {\n    content: \"Ticking answer 'Height'\",\n    trigger: 'div.js_question-wrapper:contains(\"Select all the available customizations for our Customizable Desk\") label:contains(\"Height\")'\n}, { // Question: How many versions of the Corner Desk do we have?\n    content: \"Selecting answer '2'\",\n    trigger: 'div.js_question-wrapper:contains(\"How many versions of the Corner Desk do we have\") label:contains(\"2\")',\n}, { // Question: Do you think we have missing products in our catalog? (not rated)\n    content: \"Missing products\",\n    trigger: 'div.js_question-wrapper:contains(\"Do you think we have missing products in our catalog\") textarea',\n    run: \"text I don't know products enough to be able to answer that\",\n}, { // Page-2 Question: How much do we sell our Cable Management Box?\n    content: \"Selecting answer '$80'\",\n    trigger: 'div.js_question-wrapper:contains(\"How much do we sell our Cable Management Box\") label:contains(\"$80\")',\n}, { // Question: Select all the products that sell for $100 or more\n    content: \"Ticking answer 'Corner Desk Right Sit'\",\n    trigger: 'div.js_question-wrapper:contains(\"Select all the products that sell for $100 or more\") label:contains(\"Corner Desk Right Sit\")'\n}, {\n    content: \"Ticking answer 'Desk Combination'\",\n    trigger: 'div.js_question-wrapper:contains(\"Select all the products that sell for $100 or more\") label:contains(\"Desk Combination\")'\n}, {\n    content: \"Ticking answer 'Office Chair Black'\",\n    trigger: 'div.js_question-wrapper:contains(\"Select all the products that sell for $100 or more\") label:contains(\"Office Chair Black\")'\n}, { // Question: What do you think about our prices (not rated)?\n    trigger: 'div.js_question-wrapper:contains(\"What do you think about our prices\") label:contains(\"Correctly priced\")',\n}, { // Page-3 Question: How many days is our money-back guarantee?\n    content: \"Inputting answer '60'\",\n    trigger: 'div.js_question-wrapper:contains(\"How many days is our money-back guarantee\") input',\n    run: 'text 60'\n}, { // Question: If a customer purchases a product on 6 January 2020, what is the latest day we expect to ship it?\n    content: \"Inputting answer '01/06/2020'\",\n    trigger: 'div.js_question-wrapper:contains(\"If a customer purchases a product on 6 January 2020, what is the latest day we expect to ship it\") input',\n    run: 'text 01/06/2020'\n}, { // Question: If a customer purchases a 1 year warranty on 6 January 2020, when do we expect the warranty to expire?\n    content: \"Inputting answer '01/06/2021 00:00:01'\",\n    trigger: 'div.js_question-wrapper:contains(\"If a customer purchases a 1 year warranty on 6 January 2020, when do we expect the warranty to expire\") input',\n    run: 'text 01/06/2021 00:00:01'\n}, { // Question: What day to you think is best for us to start having an annual sale (not rated)?\n    trigger: 'div.js_question-wrapper:contains(\"What day to you think is best for us to start having an annual sale (not rated)\") input',\n}, { // Question: What day and time do you think most customers are most likely to call customer service (not rated)?\n    trigger: 'div.js_question-wrapper:contains(\"What day and time do you think most customers are most likely to call customer service (not rated)\") input',\n}, { // Question: How many chairs do you think we should aim to sell in a year (not rated)?\n    content: \"Inputting answer '0'\",\n    trigger: 'div.js_question-wrapper:contains(\"How many chairs do you think we should aim to sell in a year (not rated)\") input',\n    run: 'text 0'\n}, {\n    content: \"Finish Survey\",\n    trigger: 'button[type=\"submit\"]',\n}];\n\nvar retrySteps = [{\n    trigger: 'a:contains(\"Retry\")'\n}];\n\nvar lastSteps = [{\n    trigger: 'h1:contains(\"Thank you!\")',\n    run: function () {\n        if ($('a:contains(\"Retry\")').length === 0) {\n            $('h1:contains(\"Thank you!\")').addClass('tour_success');\n        }\n    }\n}, {\n    trigger: 'h1.tour_success',\n}];\n\ntour.register('test_certification_failure', {\n    test: true,\n    url: '/survey/start/4ead4bc8-b8f2-4760-a682-1fde8daaaaac'\n}, [].concat(failSteps, retrySteps, failSteps, lastSteps));\n\n});\n", "odoo.define('survey.tour_test_certification_success', function (require) {\n'use strict';\n\nvar SurveyFormWidget = require('survey.form');\n/**\n * Speed up fade-in fade-out to avoid useless delay in tests.\n */\nSurveyFormWidget.include({\n    _submitForm: function () {\n        this.fadeInOutDelay = 0;\n        return this._super.apply(this, arguments);\n    }\n});\n\nvar tour = require('web_tour.tour');\n\ntour.register('test_certification_success', {\n    test: true,\n    url: '/survey/start/4ead4bc8-b8f2-4760-a682-1fde8daaaaac'\n},\n[{ // Page-1\n        content: \"Clicking on Start Certification\",\n        trigger: 'button.btn.btn-primary.btn-lg:contains(\"Start Certification\")',\n    }, { // Question: Do we sell Acoustic Bloc Screens?\n        content: \"Selecting answer 'Yes'\",\n        trigger: 'div.js_question-wrapper:contains(\"Do we sell Acoustic Bloc Screens\") label:contains(\"Yes\")',\n    }, { // Question: Select all the existing products\n        content: \"Ticking answer 'Chair floor protection'\",\n        trigger: 'div.js_question-wrapper:contains(\"Select all the existing products\") label:contains(\"Chair floor protection\")'\n    }, {\n        content: \"Ticking answer 'Drawer'\",\n        trigger: 'div.js_question-wrapper:contains(\"Select all the existing products\") label:contains(\"Drawer\")'\n    }, {\n        content: \"Ticking answer 'Conference chair'\",\n        trigger: 'div.js_question-wrapper:contains(\"Select all the existing products\") label:contains(\"Conference chair\")'\n    }, { // Question: Select all the available customizations for our Customizable Desk\n        content: \"Ticking answer 'Color'\",\n        trigger: 'div.js_question-wrapper:contains(\"Select all the available customizations for our Customizable Desk\") label:contains(\"Color\")'\n    }, {\n        content: \"Ticking answer 'Legs'\",\n        trigger: 'div.js_question-wrapper:contains(\"Select all the available customizations for our Customizable Desk\") label:contains(\"Legs\")'\n    }, { // Question: How many versions of the Corner Desk do we have?\n        content: \"Selecting answer '2'\",\n        trigger: 'div.js_question-wrapper:contains(\"How many versions of the Corner Desk do we have\") label:contains(\"2\")',\n    }, { // Question: Do you think we have missing products in our catalog? (not rated)\n        content: \"Missing products\",\n        trigger: 'div.js_question-wrapper:contains(\"Do you think we have missing products in our catalog\") textarea',\n        run: \"text I think we should make more versions of the customizable desk, it's such an amazing product!\",\n    }, { // Page-2 Question: How much do we sell our Cable Management Box?\n        content: \"Selecting answer '$80' (wrong one)\",\n        trigger: 'div.js_question-wrapper:contains(\"How much do we sell our Cable Management Box\") label:contains(\"$80\")',\n    }, { // Question: Select all the products that sell for $100 or more\n        content: \"Ticking answer 'Corner Desk Right Sit'\",\n        trigger: 'div.js_question-wrapper:contains(\"Select all the products that sell for $100 or more\") label:contains(\"Corner Desk Right Sit\")'\n    }, {\n        content: \"Ticking answer 'Desk Combination'\",\n        trigger: 'div.js_question-wrapper:contains(\"Select all the products that sell for $100 or more\") label:contains(\"Desk Combination\")'\n    }, {\n        content: \"Ticking answer 'Large Desk'\",\n        trigger: 'div.js_question-wrapper:contains(\"Select all the products that sell for $100 or more\") label:contains(\"Large Desk\")'\n    }, { // Question: What do you think about our prices (not rated)?\n        content: \"Selecting answer 'Underpriced'\",\n        trigger: 'div.js_question-wrapper:contains(\"What do you think about our prices\") label:contains(\"Underpriced\")',\n    }, { // Page-3 Question: How many days is our money-back guarantee?\n        content: \"Inputting answer '30'\",\n        trigger: 'div.js_question-wrapper:contains(\"How many days is our money-back guarantee\") input',\n        run: 'text 30'\n    }, { // Question: If a customer purchases a product on 6 January 2020, what is the latest day we expect to ship it?\n        content: \"Inputting answer '01/08/2020'\",\n        trigger: 'div.js_question-wrapper:contains(\"If a customer purchases a product on 6 January 2020, what is the latest day we expect to ship it\") input',\n        run: 'text 01/08/2020'\n    }, { // Question: If a customer purchases a 1 year warranty on 6 January 2020, when do we expect the warranty to expire?\n        content: \"Inputting answer '01/07/2021 00:00:01'\",\n        trigger: 'div.js_question-wrapper:contains(\"If a customer purchases a 1 year warranty on 6 January 2020, when do we expect the warranty to expire\") input',\n        run: 'text 01/07/2021 00:00:01'\n    }, { // Question: What day to you think is best for us to start having an annual sale (not rated)?\n        content: \"Inputting answer '01/01/2021'\",\n        trigger: 'div.js_question-wrapper:contains(\"What day to you think is best for us to start having an annual sale (not rated)\") input',\n        run: 'text 01/01/2021'\n    }, { // Question: What day and time do you think most customers are most likely to call customer service (not rated)?\n        content: \"Inputting answer '01/01/2021 13:00:01'\",\n        trigger: 'div.js_question-wrapper:contains(\"What day and time do you think most customers are most likely to call customer service (not rated)\") input',\n        run: 'text 01/01/2021 13:00:01'\n    }, { // Question: How many chairs do you think we should aim to sell in a year (not rated)?\n        content: \"Inputting answer '1000'\",\n        trigger: 'div.js_question-wrapper:contains(\"How many chairs do you think we should aim to sell in a year (not rated)\") input',\n        run: 'text 1000'\n    }, {\n        content: \"Finish Survey\",\n        trigger: 'button[type=\"submit\"]',\n    }, {\n        content: \"Thank you\",\n        trigger: 'h1:contains(\"Thank you!\")',\n    }, {\n        content: \"test passed\",\n        trigger: 'div:contains(\"Congratulations, you have passed the test!\")',\n    }\n]);\n\n});\n", "odoo.define('survey.tour_test_survey', function (require) {\n'use strict';\n\nvar tour = require('web_tour.tour');\n\ntour.register('test_survey', {\n    test: true,\n    url: '/survey/start/b137640d-14d4-4748-9ef6-344caaaaaae',\n}, [\n    // Page-1\n    {\n        content: 'Click on Start',\n        trigger: 'button.btn:contains(\"Start\")',\n    }, {\n        content: 'Answer Where do you live',\n        trigger: 'div.js_question-wrapper:contains(\"Where do you live\") input',\n        run: 'text Mordor-les-bains',\n    }, {\n        content: 'Answer Where do you live',\n        trigger: 'div.js_question-wrapper:contains(\"When is your date of birth\") input',\n        run: 'text 05/05/1980',\n    }, {\n        content: 'Answer How frequently do you buy products online',\n        trigger: 'div.js_question-wrapper:contains(\"How frequently do you buy products online\") label:contains(\"Once a month\")',\n    }, {\n        content: 'Answer How many times did you order products on our website',\n        trigger: 'div.js_question-wrapper:contains(\"How many times did you order products on our website\") input',\n        run: 'text 12',\n    }, {\n        content: 'Submit and go to Next Page',\n        trigger: 'button[value=\"next\"]',\n    },\n    // Page-2\n    {\n        content: 'Answer Which of the following words would you use to describe our products (High Quality)',\n        trigger: 'div.js_question-wrapper:contains(\"Which of the following words would you use to describe our products\") label:contains(\"High quality\")',\n    }, {\n        content: 'Answer Which of the following words would you use to describe our products (Good value for money)',\n        trigger: 'div.js_question-wrapper:contains(\"Which of the following words would you use to describe our products\") label:contains(\"Good value for money\")',\n    }, {\n        content: 'Answer What do your think about our new eCommerce (The new layout and design is fresh and up-to-date)',\n        trigger: 'div.js_question-wrapper:contains(\"What do your think about our new eCommerce\") tr:contains(\"The new layout and design is fresh and up-to-date\") td:first',\n    }, {\n        content: 'Answer What do your think about our new eCommerce (It is easy to find the product that I want)',\n        trigger: 'div.js_question-wrapper:contains(\"What do your think about our new eCommerce\") tr:contains(\"It is easy to find the product that I want\") td:eq(2)',\n    }, {\n        content: 'Answer What do your think about our new eCommerce (The tool to compare the products is useful to make a choice)',\n        trigger: 'div.js_question-wrapper:contains(\"What do your think about our new eCommerce\") tr:contains(\"The tool to compare the products is useful to make a choice\") td:eq(3)',\n    }, {\n        content: 'Answer What do your think about our new eCommerce (The checkout process is clear and secure)',\n        trigger: 'div.js_question-wrapper:contains(\"What do your think about our new eCommerce\") tr:contains(\"The checkout process is clear and secure\") td:eq(2)',\n    }, {\n        content: 'Answer What do your think about our new eCommerce (I have added products to my wishlist)',\n        trigger: 'div.js_question-wrapper:contains(\"What do your think about our new eCommerce\") tr:contains(\"I have added products to my wishlist\") td:last',\n    }, {\n        content: 'Answer Do you have any other comments, questions, or concerns',\n        trigger: 'div.js_question-wrapper:contains(\"Do you have any other comments, questions, or concerns\") textarea',\n        run: 'text This is great. Really.',\n    }, {\n        content: 'Click Submit and finish the survey',\n        trigger: 'button[value=\"finish\"]',\n    },\n    // Final page\n    {\n        content: 'Thank you',\n        trigger: 'h1:contains(\"Thank you!\")',\n    }\n]);\n\n});\n", "odoo.define('survey.tour_test_survey_prefill', function (require) {\n'use strict';\n\nvar tour = require('web_tour.tour');\n\ntour.register('test_survey_prefill', {\n    test: true,\n    url: '/survey/start/b137640d-14d4-4748-9ef6-344caaaaaae'\n},\n[{      // Page-1\n        trigger: 'button.btn.btn-primary.btn-lg:contains(\"Start Survey\")',\n    }, { // Question: Where do you live ?\n        trigger: 'div.js_question-wrapper:contains(\"Where do you live ?\") input',\n        run: 'text Grand-Rosiere',\n    }, { // Question: When is your date of birth ?\n        trigger: 'div.js_question-wrapper:contains(\"When is your date of birth ?\") input',\n        run: 'text 05/05/1980',\n    }, { // Question: How frequently do you buy products online ?\n        trigger: 'div.js_question-wrapper:contains(\"How frequently do you buy products online ?\") label:contains(\"Once a week\")',\n    }, { // Question: How many times did you order products on our website ?\n        trigger: 'div.js_question-wrapper:contains(\"How many times did you order products on our website ?\") input',\n        run: 'text 42',\n    }, {\n        content: 'Click on Next Page',\n        trigger: 'button[value=\"next\"]',\n    },\n    // Page-2\n    { // Question: Which of the following words would you use to describe our products ?\n        content: 'Answer Which of the following words would you use to describe our products (High Quality)',\n        trigger: 'div.js_question-wrapper:contains(\"Which of the following words would you use to describe our products\") label:contains(\"High quality\")',\n    }, {\n        content: 'Answer Which of the following words would you use to describe our products (Good value for money)',\n        trigger: 'div.js_question-wrapper:contains(\"Which of the following words would you use to describe our products\") label:contains(\"Good value for money\")',\n    }, {\n        content: 'Answer What do your think about our new eCommerce (The new layout and design is fresh and up-to-date)',\n        trigger: 'div.js_question-wrapper:contains(\"What do your think about our new eCommerce\") tr:contains(\"The new layout and design is fresh and up-to-date\") td:first',\n    }, {\n        content: 'Answer What do your think about our new eCommerce (It is easy to find the product that I want)',\n        trigger: 'div.js_question-wrapper:contains(\"What do your think about our new eCommerce\") tr:contains(\"It is easy to find the product that I want\") td:eq(2)',\n    }, {\n        content: 'Answer What do your think about our new eCommerce (The tool to compare the products is useful to make a choice)',\n        trigger: 'div.js_question-wrapper:contains(\"What do your think about our new eCommerce\") tr:contains(\"The tool to compare the products is useful to make a choice\") td:eq(3)',\n    }, {\n        content: 'Answer What do your think about our new eCommerce (The checkout process is clear and secure)',\n        trigger: 'div.js_question-wrapper:contains(\"What do your think about our new eCommerce\") tr:contains(\"The checkout process is clear and secure\") td:eq(2)',\n    }, {\n        content: 'Answer What do your think about our new eCommerce (I have added products to my wishlist)',\n        trigger: 'div.js_question-wrapper:contains(\"What do your think about our new eCommerce\") tr:contains(\"I have added products to my wishlist\") td:last',\n    }, {\n        content: 'Answer Do you have any other comments, questions, or concerns',\n        trigger: 'div.js_question-wrapper:contains(\"Do you have any other comments, questions, or concerns\") textarea',\n        run: 'text Is the prefill working?',\n    }, {\n        // Go back to previous page\n        content: 'Click on the previous page name in the breadcrumb',\n        trigger: 'ol.breadcrumb a:first',\n    }, {\n        trigger: 'div.js_question-wrapper:contains(\"How many times did you order products on our website ?\") input',\n        run: function () {\n            var $inputQ3 = $('div.js_question-wrapper:contains(\"How many times did you order products on our website ?\") input');\n            if ($inputQ3.val() === '42.0') {\n                $('.o_survey_title').addClass('prefilled');\n            }\n        }\n    }, {\n        trigger: '.o_survey_title.prefilled',\n        run: function () {\n            // check that all the answers are prefilled in Page 1\n            var $inputQ1 = $('div.js_question-wrapper:contains(\"Where do you live ?\") input');\n            if ($inputQ1.val() !== 'Grand-Rosiere') {\n                return;\n            }\n\n            var $inputQ2 = $('div.js_question-wrapper:contains(\"When is your date of birth ?\") input');\n            if ($inputQ2.val() !== '05/05/1980') {\n                return;\n            }\n\n            var $inputQ3 = $('div.js_question-wrapper:contains(\"How frequently do you buy products online ?\") label:contains(\"Once a week\") input');\n            if (!$inputQ3.is(':checked')) {\n                return;\n            }\n\n            var $inputQ4 = $('div.js_question-wrapper:contains(\"How many times did you order products on our website ?\") input');\n            if ($inputQ4.val() !== '42.0') {\n                return;\n            }\n\n            $('.o_survey_title').addClass('tour_success');\n        }\n    }, {\n        trigger: '.o_survey_title.tour_success'\n    }, {\n        content: 'Click on Next Page',\n        trigger: 'button[value=\"next\"]',\n    }, {\n        trigger: 'div.js_question-wrapper:contains(\"Do you have any other comments, questions, or concerns\") textarea',\n        run: function () {\n            var $inputQ3 = $('div.js_question-wrapper:contains(\"Do you have any other comments, questions, or concerns\") textarea');\n            if ($inputQ3.val() === \"Is the prefill working?\") {\n                $('.o_survey_title').addClass('prefilled2');\n            }\n        }\n    }, {\n        trigger: '.o_survey_title.prefilled2',\n        run: function () {\n            // check that all the answers are prefilled in Page 2\n            var $input1Q1 = $('div.js_question-wrapper:contains(\"Which of the following words would you use to describe our products\") label:contains(\"High quality\") input');\n            if (!$input1Q1.is(':checked')) {\n                return;\n            }\n\n            var $input2Q1 = $('div.js_question-wrapper:contains(\"Which of the following words would you use to describe our products\") label:contains(\"Good value for money\") input');\n            if (!$input2Q1.is(':checked')) {\n                return;\n            }\n\n            var $input1Q2 = $('div.js_question-wrapper:contains(\"What do your think about our new eCommerce\") tr:contains(\"The new layout and design is fresh and up-to-date\") input:first');\n            if (!$input1Q2.is(':checked')) {\n                return;\n            }\n\n            var $input2Q2 = $('div.js_question-wrapper:contains(\"What do your think about our new eCommerce\") tr:contains(\"It is easy to find the product that I want\") input:eq(2)');\n            if (!$input2Q2.is(':checked')) {\n                return;\n            }\n\n            var $input3Q2 = $('div.js_question-wrapper:contains(\"What do your think about our new eCommerce\") tr:contains(\"The tool to compare the products is useful to make a choice\") input:eq(3)');\n            if (!$input3Q2.is(':checked')) {\n                return;\n            }\n\n            var $input4Q2 = $('div.js_question-wrapper:contains(\"What do your think about our new eCommerce\") tr:contains(\"The checkout process is clear and secure\") input:eq(2)');\n            if (!$input4Q2.is(':checked')) {\n                return;\n            }\n\n            var $input5Q2 = $('div.js_question-wrapper:contains(\"What do your think about our new eCommerce\") tr:contains(\"I have added products to my wishlist\") input:last');\n            if (!$input5Q2.is(':checked')) {\n                return;\n            }\n\n            var $inputQ3 = $('div.js_question-wrapper:contains(\"Do you have any other comments, questions, or concerns\") textarea');\n            if ($inputQ3.val() !== \"Is the prefill working?\") {\n                return;\n            }\n\n            $('.o_survey_title').addClass('tour_success_2');\n        }\n    }, {\n        trigger: '.o_survey_title.tour_success_2'\n    }\n]);\n\n});\n", "odoo.define('survey.session_manage_test', function (require) {\n\"use strict\";\n\nvar SessionManager = require('survey.session_manage');\n/**\n * Small override for test/tour purposes.\n */\nSessionManager.include({\n    /**\n     * - Trigger the fetch of answer results immediately at the start.\n     * (Instead of wasting 2 seconds waiting after the start).\n     * - Set the fade in/out time to 1 ms to avoid unnecessary delays.\n     * - Avoid refreshing the results every 2 seconds\n     */\n    start: function () {\n        var self = this;\n        return this._super.apply(this, arguments)\n            .then(this._refreshResults.bind(this))\n            .then(function () {\n                self.fadeInOutTime = 1;\n                clearInterval(self.resultsRefreshInterval);\n            });\n    },\n\n    /**\n     * Force the timer to \"now\" to avoid introducing potential test breaking\n     * timely variables (rpc/small server delay/...) if the start_question_time flickers.\n     */\n    _startTimer: function () {\n        this.$el.data('timer', moment.utc());\n        return this._super.apply(this, arguments);\n    }\n});\n\nreturn SessionManager;\n\n});\n", "odoo.define('survey.test_survey_session_create_tour', function (require) {\n\"use strict\";\n\nvar tour = require('web_tour.tour');\nvar surveySessionTools = require('survey.session_tour_tools');\n\n/**\n * Small tour that will simply start the session and wait for attendees.\n */\ntour.register('test_survey_session_create_tour', {\n    url: \"/web\",\n    test: true,\n}, [].concat(surveySessionTools.accessSurveySteps, [{\n    trigger: 'button[name=\"action_start_session\"]',\n}, {\n    trigger: '.o_survey_session_attendees_count:contains(\"0\")',\n    run: function () {} // check session is correctly started\n}]));\n\n});\n", "odoo.define('survey.test_survey_session_manage_tour', function (require) {\n\"use strict\";\n\nvar tour = require('web_tour.tour');\nvar surveySessionTools = require('survey.session_tour_tools');\n\n/**\n * Since the chart is rendered using SVG, we can't use jQuery triggers to check if everything\n * is correctly rendered.\n * This helper method returns the chart data (Chartjs framework specific) in the following structure:\n * [{ value, backgroundColor, labelColor }]\n */\nvar getChartData = function () {\n    var chartData = [];\n    var rootWidget = odoo.__DEBUG__.services['root.widget'];\n    var surveyManagePublicWidget = rootWidget.publicWidgets.find(function (widget) {\n        return widget.$el.hasClass('o_survey_session_manage');\n    });\n\n    if (!surveyManagePublicWidget) {\n        return chartData;\n    }\n\n    surveyManagePublicWidget.resultsChart.chart.data.datasets[0].data.forEach(function (value, index) {\n        chartData.push({\n            value: value,\n            backgroundColor: surveyManagePublicWidget.resultsChart._getBackgroundColor({dataIndex: index}),\n            labelColor: surveyManagePublicWidget.resultsChart._getLabelColor({dataIndex: index}),\n        });\n    });\n\n    return chartData;\n};\n\nvar nextScreen = function () {\n    var e = $.Event('keydown');\n    e.keyCode = 39; // arrow-right\n    $(document).trigger(e);\n};\n\nvar previousScreen = function () {\n    var e = $.Event('keydown');\n    e.keyCode = 37; // arrow-left\n    $(document).trigger(e);\n};\n\nvar REGULAR_ANSWER_COLOR = '#212529';\nvar CORRECT_ANSWER_COLOR = '#2CBB70';\nvar WRONG_ANSWER_COLOR = '#D9534F';\n\n/**\n * A 'regular' answer is an answer that is nor correct, nor incorrect.\n * The check is based on the specific opacity (0.8) and color of those answers.\n */\nvar isRegularAnswer = function (answer) {\n    return answer.backgroundColor.includes('0.8') &&\n        answer.labelColor === REGULAR_ANSWER_COLOR;\n};\n\n/**\n * The check is based on the specific opacity (0.8) and color of correct answers.\n */\nvar isCorrectAnswer = function (answer) {\n    return answer.backgroundColor.includes('0.8') &&\n        answer.labelColor === CORRECT_ANSWER_COLOR;\n};\n\n/**\n * The check is based on the specific opacity (0.2) and color of incorrect answers.\n */\nvar isIncorrectAnswer = function (answer) {\n    return answer.backgroundColor.includes('0.2') &&\n        answer.labelColor === WRONG_ANSWER_COLOR;\n};\n\n/**\n * Tour that will test the whole survey session from the host point of view.\n *\n * Break down of the main points:\n * - Open the 'session manager' (the session was already created by a previous tour)\n * - Display the nickname question, and move to the next one (as answers are not displayed)\n * - Check answers are correctly displayed for the 3 'simple' question types (text, date, datetime)\n * - Move to the choice question and check that answers are displayed\n *   (The check is rather complex, see 'getChartData' for details)\n * - If everything is correctly displayed, move to the next question\n * - On the scored choice question, check that the screens are correctly chained:\n *   no results displayed -> results displayed -> correct/incorrect answers -> leaderboard\n * - On the scored + timed multiple choice question, check the same than previous question,\n *   except that the results are supposed to be displayed automatically when the question timer runs out\n * - Test the 'back' behavior and check that screens are reversed correctly\n * - Check that our final leaderboard is correct based on attendees answers\n * - Close the survey session\n */\ntour.register('test_survey_session_manage_tour', {\n    url: \"/web\",\n    test: true,\n}, [].concat(surveySessionTools.accessSurveySteps, [{\n    trigger: 'button[name=\"action_open_session_manager\"]',\n}, {\n    trigger: 'h1:contains(\"Nickname\")',\n    run: function () {} // check nickname question is displayed\n}, {\n    trigger: 'h1',\n    run: nextScreen\n}, {\n    trigger: 'h1:contains(\"Text Question\")',\n    run: function () {} // check text question is displayed\n}, {\n    trigger: '.o_survey_session_progress_small:contains(\"3 / 3\")',\n    run: function () {} // check we have 3 answers\n}, {\n    trigger: '.o_survey_session_text_answer_container:contains(\"Attendee 1 is the best\")',\n    run: function () {} // check attendee 1 answer is displayed\n}, {\n    trigger: '.o_survey_session_text_answer_container:contains(\"Attendee 2 rulez\")',\n    run: function () {} // check attendee 2 answer is displayed\n}, {\n    trigger: '.o_survey_session_text_answer_container:contains(\"Attendee 3 will crush you\")',\n    run: function () {} // check attendee 3 answer is displayed\n}, {\n    trigger: 'h1',\n    run: nextScreen\n}, {\n    trigger: '.o_survey_session_progress_small:contains(\"2 / 3\")',\n    run: function () {} // check we have 2 answers\n}, {\n    trigger: '.o_survey_session_text_answer_container:contains(\"10/10/2010\")',\n    run: function () {} // check attendee 1 answer is displayed\n}, {\n    trigger: '.o_survey_session_text_answer_container:contains(\"11/11/2011\")',\n    run: function () {} // check attendee 2 answer is displayed\n}, {\n    trigger: 'h1',\n    run: previousScreen\n}, {\n    trigger: 'h1:contains(\"Text Question\")',\n    run: function () {} // check text question is displayed\n}, {\n    trigger: '.o_survey_session_progress_small:contains(\"3 / 3\")',\n    run: function () {} // check we have 3 answers\n}, {\n    trigger: '.o_survey_session_text_answer_container:contains(\"Attendee 1 is the best\")',\n    run: function () {} // check attendee 1 answer is displayed\n}, {\n    trigger: '.o_survey_session_text_answer_container:contains(\"Attendee 2 rulez\")',\n    run: function () {} // check attendee 2 answer is displayed\n}, {\n    trigger: '.o_survey_session_text_answer_container:contains(\"Attendee 3 will crush you\")',\n    run: function () {} // check attendee 3 answer is displayed\n}, {\n    trigger: 'h1',\n    run: nextScreen\n}, {\n    trigger: '.o_survey_session_progress_small:contains(\"2 / 3\")',\n    run: function () {} // check we have 2 answers\n}, {\n    trigger: '.o_survey_session_text_answer_container:contains(\"10/10/2010\")',\n    run: function () {} // check attendee 1 answer is displayed\n}, {\n    trigger: '.o_survey_session_text_answer_container:contains(\"11/11/2011\")',\n    run: function () {} // check attendee 2 answer is displayed\n}, {\n    trigger: 'h1',\n    run: nextScreen\n}, {\n    trigger: '.o_survey_session_progress_small:contains(\"2 / 3\")',\n    run: function () {} // check we have 2 answers\n}, {\n    trigger: '.o_survey_session_text_answer_container:contains(\"10/10/2010 10:00:00\")',\n    run: function () {} // check attendee 2 answer is displayed\n}, {\n    trigger: '.o_survey_session_text_answer_container:contains(\"11/11/2011 15:55:55\")',\n    run: function () {} // check attendee 3 answer is displayed\n}, {\n    trigger: 'h1',\n    run: nextScreen\n}, {\n    trigger: 'h1:contains(\"Regular Simple Choice\")',\n    run: function () {\n        var chartData = getChartData();\n        if (chartData.length !== 3) {\n            console.error('Chart data should contain 3 records!');\n            return;\n        }\n\n        var firstAnswerData = chartData[0];\n        if (firstAnswerData.value !== 2 || !isRegularAnswer(firstAnswerData)) {\n            console.error('First answer should be picked by 2 users!');\n            return;\n        }\n\n        var secondAnswerData = chartData[1];\n        if (secondAnswerData.value !== 1 || !isRegularAnswer(secondAnswerData)) {\n            console.error('Second answer should be picked by 1 user!');\n            return;\n        }\n\n        var thirdAnswerData = chartData[2];\n        if (thirdAnswerData.value !== 0 || !isRegularAnswer(thirdAnswerData)) {\n            console.error('Third answer should be picked by no users!');\n            return;\n        }\n\n        nextScreen();\n    }\n}, {\n    trigger: 'h1:contains(\"Scored Simple Choice\")',\n    run: function () {\n        var chartData = getChartData();\n        if (chartData.length !== 4) {\n            console.error('Chart data should contain 4 records!');\n            return;\n        }\n\n        for (var i = 0; i < chartData.length; i++) {\n            if (chartData[i].value !== 0) {\n                console.error(\n                    'Chart data should all be 0 because \"next screen\" that shows ' +\n                    'answers values is not triggered yet!');\n                return;\n            }\n        }\n\n        nextScreen();\n        chartData = getChartData();\n\n        var firstAnswerData = chartData[0];\n        if (firstAnswerData.value !== 1 || !isRegularAnswer(firstAnswerData)) {\n            console.error(\n                'First answer should be picked by 1 user and its correctness should not be shown yet!'\n            );\n            return;\n        }\n\n        var secondAnswerData = chartData[1];\n        if (secondAnswerData.value !== 1 || !isRegularAnswer(secondAnswerData)) {\n            console.error(\n                'Second answer should be picked by 1 user and its correctness should not be shown yet!'\n            );\n            return;\n        }\n\n        var thirdAnswerData = chartData[2];\n        if (thirdAnswerData.value !== 1 || !isRegularAnswer(thirdAnswerData)) {\n            console.error(\n                'Third answer should be picked by 1 user and its correctness should not be shown yet!'\n            );\n            return;\n        }\n\n        var fourthAnswerData = chartData[3];\n        if (fourthAnswerData.value !== 0 || !isRegularAnswer(fourthAnswerData)) {\n            console.error(\n                'Fourth answer should be picked by no users and its correctness should not be shown yet!'\n            );\n            return;\n        }\n\n        nextScreen();\n        chartData = getChartData();\n\n        firstAnswerData = chartData[0];\n        if (firstAnswerData.value !== 1 || !isCorrectAnswer(firstAnswerData)) {\n            console.error(\n                'First answer should be picked by 1 user and it should be correct!'\n            );\n            return;\n        }\n\n        secondAnswerData = chartData[1];\n        if (secondAnswerData.value !== 1 || !isIncorrectAnswer(secondAnswerData)) {\n            console.error(\n                'Second answer should be picked by 1 user and it should be incorrect!'\n            );\n            return;\n        }\n\n        thirdAnswerData = chartData[2];\n        if (thirdAnswerData.value !== 1 || !isIncorrectAnswer(thirdAnswerData)) {\n            console.error(\n                'Third answer should be picked by 1 user and it should be incorrect!'\n            );\n            return;\n        }\n\n        fourthAnswerData = chartData[3];\n        if (fourthAnswerData.value !== 0 || !isIncorrectAnswer(fourthAnswerData)) {\n            console.error(\n                'Fourth answer should be picked by no users and it should be incorrect!'\n            );\n            return;\n        }\n\n        nextScreen();\n        nextScreen();\n    }\n}, {\n    trigger: 'h1:contains(\"Timed Scored Multiple Choice\")',\n    run: function () {\n        var chartData = getChartData();\n        if (chartData.length !== 3) {\n            console.error('Chart data should contain 4 records!');\n            return;\n        }\n\n        for (var i = 0; i < chartData.length; i++) {\n            if (chartData[i].value !== 0) {\n                console.error(\n                    'Chart data should all be 0 because \"next screen\" that shows ' +\n                    'answers values is not triggered yet!');\n                return;\n            }\n        }\n\n        // after 1 second, results are displayed automatically because question timer runs out\n        // we add 1 extra second because of the way the timer works:\n        // it only triggers the time_up event 1 second AFTER the delay is passed\n        setTimeout(function () {\n            chartData = getChartData();\n            var firstAnswerData = chartData[0];\n            if (firstAnswerData.value !== 2 || !isRegularAnswer(firstAnswerData)) {\n                console.error(\n                    'First answer should be picked by 2 users and its correctness should not be shown yet!'\n                );\n                return;\n            }\n\n            var secondAnswerData = chartData[1];\n            if (secondAnswerData.value !== 2 || !isRegularAnswer(secondAnswerData)) {\n                console.error(\n                    'Second answer should be picked by 2 users and its correctness should not be shown yet!'\n                );\n                return;\n            }\n\n            var thirdAnswerData = chartData[2];\n            if (thirdAnswerData.value !== 1 || !isRegularAnswer(thirdAnswerData)) {\n                console.error(\n                    'Third answer should be picked by 1 user and its correctness should not be shown yet!'\n                );\n                return;\n            }\n\n            nextScreen();\n            chartData = getChartData();\n\n            firstAnswerData = chartData[0];\n            if (firstAnswerData.value !== 2 || !isCorrectAnswer(firstAnswerData)) {\n                console.error(\n                    'First answer should be picked by 2 users and it should be correct!'\n                );\n                return;\n            }\n\n            secondAnswerData = chartData[1];\n            if (secondAnswerData.value !== 2 || !isCorrectAnswer(secondAnswerData)) {\n                console.error(\n                    'Second answer should be picked by 2 users and it should be correct!'\n                );\n                return;\n            }\n\n            thirdAnswerData = chartData[2];\n            if (thirdAnswerData.value !== 1 || !isIncorrectAnswer(thirdAnswerData)) {\n                console.error(\n                    'Third answer should be picked by 1 user and it should be incorrect!'\n                );\n                return;\n            }\n\n            nextScreen();\n        }, 2100);\n    }\n}, {\n    trigger: 'h1:contains(\"Final Leaderboard\")',\n    run: function () {} // Final Leaderboard is displayed\n}, {\n    trigger: 'h1',\n    run: function () {\n        // previous screen testing\n        previousScreen();\n        var chartData = getChartData();\n\n        var firstAnswerData = chartData[0];\n        if (firstAnswerData.value !== 2 || !isCorrectAnswer(firstAnswerData)) {\n            console.error(\n                'First answer should be picked by 2 users and it should be correct!'\n            );\n            return;\n        }\n\n        var secondAnswerData = chartData[1];\n        if (secondAnswerData.value !== 2 || !isCorrectAnswer(secondAnswerData)) {\n            console.error(\n                'Second answer should be picked by 2 users and it should be correct!'\n            );\n            return;\n        }\n\n        var thirdAnswerData = chartData[2];\n        if (thirdAnswerData.value !== 1 || !isIncorrectAnswer(thirdAnswerData)) {\n            console.error(\n                'Third answer should be picked by 1 user and it should be incorrect!'\n            );\n            return;\n        }\n\n        previousScreen();\n        chartData = getChartData();\n\n        firstAnswerData = chartData[0];\n        if (firstAnswerData.value !== 2 || !isRegularAnswer(firstAnswerData)) {\n            console.error(\n                'First answer should be picked by 2 users and its correctness should not be shown!'\n            );\n            return;\n        }\n\n        secondAnswerData = chartData[1];\n        if (secondAnswerData.value !== 2 || !isRegularAnswer(secondAnswerData)) {\n            console.error(\n                'Second answer should be picked by 2 users and its correctness should not be shown!'\n            );\n            return;\n        }\n\n        thirdAnswerData = chartData[2];\n        if (thirdAnswerData.value !== 1 || !isRegularAnswer(thirdAnswerData)) {\n            console.error(\n                'Third answer should be picked by 1 user and its correctness should not be shown!'\n            );\n            return;\n        }\n\n        previousScreen();\n        chartData = getChartData();\n\n        for (var i = 0; i < chartData.length; i++) {\n            if (chartData[i].value !== 0) {\n                console.error(\n                    'Chart data should all be 0 because \"next screen\" that shows ' +\n                    'answers values is not triggered yet!');\n                return;\n            }\n        }\n\n        // Now we go forward to the \"Final Leaderboard\" again (3 times)\n        for (i = 0; i < 3; i++) {\n            nextScreen();\n        }\n    }\n}, {\n    trigger: 'h1:contains(\"Final Leaderboard\")',\n    run: function () {} // Final Leaderboard is displayed\n}, {\n    trigger: '.o_survey_session_close:has(\"i.fa-close\")'\n}, {\n    trigger: 'button[name=\"action_start_session\"]',\n    run: function () {} // check that we can start another session\n}]));\n\n});\n", "odoo.define('survey.test_survey_session_start_tour', function (require) {\n\"use strict\";\n\nvar tour = require('web_tour.tour');\nvar surveySessionTools = require('survey.session_tour_tools');\n\n/**\n * Small tour that will open the session manager and check\n * that the attendees are accounted for, then start the session\n * by going to the first question.\n */\ntour.register('test_survey_session_start_tour', {\n    url: \"/web\",\n    test: true,\n}, [].concat(surveySessionTools.accessSurveySteps, [{\n    trigger: 'button[name=\"action_open_session_manager\"]',\n}, {\n    trigger: '.o_survey_session_attendees_count:contains(\"3\")',\n    run: function () {} // check attendees count\n}, {\n    trigger: 'h1',\n    run: function () {\n        var e = $.Event('keydown');\n        e.keyCode = 39; // arrow-right\n        $(document).trigger(e); // start session\n    }\n}, {\n    trigger: 'h1:contains(\"Nickname\")',\n    run: function () {} // check first question is displayed\n}]));\n\n});\n", "odoo.define('survey.session_tour_tools', function (require) {\n'use strict';\n\nvar tour = require('web_tour.tour');\n\n/**\n * Tool that gathers common steps to every 'survey session' tours.\n */\nreturn {\n    accessSurveySteps: [tour.stepUtils.showAppsMenuItem(), {\n        trigger: '.o_app[data-menu-xmlid=\"survey.menu_surveys\"]',\n        edition: 'community'\n    }, {\n        trigger: '.o_app[data-menu-xmlid=\"survey.menu_surveys\"]',\n        edition: 'enterprise'\n    }, {\n        trigger: '.oe_kanban_card:contains(\"User Session Survey\")',\n    }]\n};\n\n});\n", "odoo.define('auth_totp.tours', function(require) {\n\"use strict\";\n\nconst tour = require('web_tour.tour');\nconst ajax = require('web.ajax');\n\nfunction openRoot() {\n    return [{\n        content: \"return to client root to avoid race condition\",\n        trigger: 'body',\n        run() {\n            $('body').addClass('wait');\n            window.location = '/web';\n        }\n    }, {\n        content: \"wait for client reload\",\n        trigger: 'body:not(.wait)',\n        run() {}\n    }];\n}\nfunction openUserProfileAtSecurityTab() {\n    return [{\n        content: 'Open user account menu',\n        trigger: '.o_user_menu .oe_topbar_name',\n        run: 'click',\n    }, {\n        content: \"Open preferences / profile screen\",\n        trigger: '[data-menu=settings]',\n        run: 'click',\n    }, {\n        content: \"Switch to security tab\",\n        trigger: 'a[role=tab]:contains(\"Account Security\")',\n        run: 'click',\n    }];\n}\n\n/**\n * Checks that the TOTP button is in the specified state (true = enabled =\n * can disable, false = disabled = can enable), then closes the profile dialog\n * if it's one (= hr not installed).\n *\n * If no totp state is provided, just checks that the toggle exists.\n */\nfunction closeProfileDialog({content, totp_state}) {\n    let trigger;\n    switch (totp_state) {\n    case true: trigger = 'button[name=action_totp_disable]'; break;\n    case false: trigger = 'button[name=action_totp_enable_wizard]'; break;\n    case undefined: trigger = 'button.o_auth_2fa_btn'; break;\n    default: throw new Error(`Invalid totp state ${totp_state}`)\n    }\n\n    return [{\n        content,\n        trigger,\n        run() {\n            const $modal = this.$anchor.parents('.o_dialog_container');\n            if ($modal.length) {\n                $modal.find('button[name=preference_cancel]').click()\n            }\n        }\n    }, {\n        trigger: 'body',\n        async run() {\n            while (document.querySelector('.o_dialog_container .o_dialog')) {\n                await Promise.resolve();\n            }\n            this.$anchor.addClass('dialog-closed');\n        },\n    }, {\n        trigger: 'body.dialog-closed',\n        run() {},\n    }];\n}\n\ntour.register('totp_tour_setup', {\n    test: true,\n    url: '/web'\n}, [...openUserProfileAtSecurityTab(), {\n    content: \"Open totp wizard\",\n    trigger: 'button[name=action_totp_enable_wizard]',\n}, {\n    content: \"Check that we have to enter enhanced security mode and input password\",\n    extra_trigger: 'div:contains(\"enter your password\")',\n    trigger: '[name=password] input',\n    run: 'text demo',\n}, {\n    content: \"Confirm\",\n    trigger: \"button:contains(Confirm Password)\",\n}, {\n    content: \"Check the wizard has opened\",\n    trigger: 'li:contains(\"When requested to do so\")',\n    run() {}\n}, {\n    content: \"Get secret from collapsed div\",\n    trigger: 'a:contains(\"Cannot scan it?\")',\n    async run(helpers) {\n        const $secret = this.$anchor.closest('div').find('[name=secret] span:first-child');\n        const $copyBtn = $secret.find('button');\n        $copyBtn.remove();\n        const token = await ajax.jsonRpc('/totphook', 'call', {\n            secret: $secret.text()\n        });\n        helpers.text(token, '[name=code] input');\n        helpers.click('button.btn-primary:contains(Activate)');\n        $('body').addClass('got-token')\n    }\n}, {\n    content: 'wait for rpc',\n    trigger: 'body.got-token',\n    run() {}\n},\n...openRoot(),\n...openUserProfileAtSecurityTab(),\n...closeProfileDialog({\n    content: \"Check that the button has changed\",\n    totp_state: true,\n}),\n]);\n\ntour.register('totp_login_enabled', {\n    test: true,\n    url: '/'\n}, [{\n    content: \"check that we're on the login page or go to it\",\n    trigger: 'input#login, a:contains(Sign in)'\n}, {\n    content: \"input login\",\n    trigger: 'input#login',\n    run: 'text demo',\n}, {\n    content: 'input password',\n    trigger: 'input#password',\n    run: 'text demo',\n}, {\n    content: \"click da button\",\n    trigger: 'button:contains(\"Log in\")',\n}, {\n    content: \"expect totp screen\",\n    trigger: 'label:contains(Authentication Code)',\n}, {\n    content: \"input code\",\n    trigger: 'input[name=totp_token]',\n    async run(helpers) {\n        // TODO: if tours are ever async-aware the click should get moved out,\n        //       but currently there's no great way to make the tour wait until\n        //       we've retrieved and set the token: `:empty()` is aboutthe text\n        //       content of the HTML element, not the JS value property. We\n        //       could set a class but that's really no better than\n        //       procedurally clicking the button after we've set the input.\n        const token = await ajax.jsonRpc('/totphook', 'call', {});\n        helpers.text(token);\n        helpers.click('button:contains(\"Log in\")');\n    }\n}, {\n    content: \"check we're logged in\",\n    trigger: \".o_user_menu .oe_topbar_name\",\n    run() {}\n}]);\n\ntour.register('totp_login_device', {\n    test: true,\n    url: '/'\n}, [{\n    content: \"check that we're on the login page or go to it\",\n    trigger: 'input#login, a:contains(Sign in)'\n}, {\n    content: \"input login\",\n    trigger: 'input#login',\n    run: 'text demo',\n}, {\n    content: 'input password',\n    trigger: 'input#password',\n    run: 'text demo',\n}, {\n    content: \"click da button\",\n    trigger: 'button:contains(\"Log in\")',\n}, {\n    content: \"expect totp screen\",\n    trigger: 'label:contains(Authentication Code)',\n}, {\n    content: \"check remember device box\",\n    trigger: 'label[for=switch-remember]',\n}, {\n    content: \"input code\",\n    trigger: 'input[name=totp_token]',\n    async run(helpers) {\n        const token = await ajax.jsonRpc('/totphook', 'call', {})\n        helpers.text(token);\n        helpers.click('button:contains(\"Log in\")');\n    }\n}, {\n    content: \"check we're logged in\",\n    trigger: \".o_user_menu .oe_topbar_name\",\n    run: 'click',\n}, {\n    content: \"click the Log out button\",\n    trigger: '.dropdown-item[data-menu=logout]',\n}, {\n    content: \"check that we're back on the login page or go to it\",\n    trigger: 'input#login, a:contains(Log in)'\n}, {\n    content: \"input login again\",\n    trigger: 'input#login',\n    run: 'text demo',\n}, {\n    content: 'input password again',\n    trigger: 'input#password',\n    run: 'text demo',\n}, {\n    content: \"click da button again\",\n    trigger: 'button:contains(\"Log in\")',\n},  {\n    content: \"check we're logged in without 2FA\",\n    trigger: \".o_user_menu .oe_topbar_name\",\n    run() {}\n},\n// now go and disable two-factor authentication would be annoying to do in a separate tour\n// because we'd need to login & totp again as HttpCase.authenticate can't\n// succeed w/ totp enabled\n...openUserProfileAtSecurityTab(),\n{\n    content: \"Open totp wizard\",\n    trigger: 'button[name=action_totp_disable]',\n}, {\n    content: \"Check that we have to enter enhanced security mode and input password\",\n    extra_trigger: 'div:contains(\"enter your password\")',\n    trigger: '[name=password] input',\n    run: 'text demo',\n}, {\n    content: \"Confirm\",\n    trigger: \"button:contains(Confirm Password)\",\n},\n...openRoot(),\n...openUserProfileAtSecurityTab(),\n...closeProfileDialog({\n    content: \"Check that the button has changed\",\n    totp_state: false\n}),\n]);\n\ntour.register('totp_login_disabled', {\n    test: true,\n    url: '/'\n}, [{\n    content: \"check that we're on the login page or go to it\",\n    trigger: 'input#login, a:contains(Sign in)'\n}, {\n    content: \"input login\",\n    trigger: 'input#login',\n    run: 'text demo',\n}, {\n    content: 'input password',\n    trigger: 'input#password',\n    run: 'text demo',\n}, {\n    content: \"click da button\",\n    trigger: 'button:contains(\"Log in\")',\n},\n// normally we'd end the tour here as it's all we care about but there are a\n// bunch of ongoing queries from the loading of the web client which cause\n// issues, so go and open the preferences / profile screen to make sure\n// everything settles down\n...openUserProfileAtSecurityTab(),\n// close the dialog if that makes sense\n...closeProfileDialog({})\n]);\n\nconst columns = {};\ntour.register('totp_admin_disables', {\n    test: true,\n    url: '/web'\n}, [tour.stepUtils.showAppsMenuItem(), {\n    content: 'Go to settings',\n    trigger: '[data-menu-xmlid=\"base.menu_administration\"]'\n}, {\n    content: 'Wait for page',\n    trigger: '.o_menu_brand:contains(\"Settings\")',\n    run() {}\n}, {\n    content: \"Open Users menu\",\n    trigger: '[data-menu-xmlid=\"base.menu_users\"]'\n}, {\n    content: \"Open Users view\",\n    trigger: '[data-menu-xmlid=\"base.menu_action_res_users\"]',\n    run(helpers) {\n        // funny story: the users view we're trying to reach, sometimes we're\n        // already there, but if we re-click the next step executes before the\n        // action has the time to re-load, the one after that doesn't, and our\n        // selection get discarded by the action reloading, so here try to\n        // see if we're already on the users action through the breadcrumb and\n        // just close the menu if so\n        const $crumb = $('.breadcrumb');\n        if ($crumb.text().indexOf('Users') === -1) {\n            // on general settings page, click menu\n            helpers.click();\n        } else {\n            // else close menu\n            helpers.click($('[data-menu-xmlid=\"base.menu_users\"]'));\n        }\n    }\n}, {\n    content: \"Find Demo User\",\n    trigger: 'td.o_data_cell:contains(\"demo\")',\n    run(helpers) {\n        const $titles = this.$anchor.closest('table').find('tr:first th');\n        for (let i=0; i<$titles.length; ++i) {\n            columns[$titles[i].getAttribute('data-name')] = i;\n        }\n        const $row = this.$anchor.closest('tr');\n        const sel = $row.find('.o_list_record_selector input[type=checkbox]');\n        helpers.click(sel);\n    }\n}, {\n    content: \"Open Actions menu\",\n    trigger: 'button.dropdown-toggle:contains(\"Action\")'\n}, {\n    content: \"Select totp remover\",\n    trigger: 'span.dropdown-item:contains(Disable two-factor authentication)'\n}, { // enhanced security yo\n    content: \"Check that we have to enter enhanced security mode & input password\",\n    extra_trigger: 'div:contains(\"enter your password\")',\n    trigger: '[name=password] input',\n    run: 'text admin',\n}, {\n    content: \"Confirm\",\n    trigger: \"button:contains(Confirm Password)\",\n}, {\n    content: \"open the user's form\",\n    trigger: \"td.o_data_cell:contains(demo)\",\n}, {\n    content: \"go to Account security Tab\",\n    trigger: \"a.nav-link:contains(Account Security)\",\n}, ...closeProfileDialog({\n    content: \"check that demo user has been de-totp'd\",\n    totp_state: false,\n}),\n])\n});\n", "odoo.define('auth_totp_mail.tours', function(require) {\n\"use strict\";\n\nconst tour = require('web_tour.tour');\n\nfunction openAccountSettingsTab() {\n    return [{\n        content: 'Go to settings',\n        trigger: '[data-menu-xmlid=\"base.menu_administration\"]'\n    }, {\n        content: 'Wait for page',\n        trigger: '.o_menu_brand:contains(\"Settings\")',\n        run: () => {}\n    }, {\n        content: \"Open Users menu\",\n        trigger: '[data-menu-xmlid=\"base.menu_users\"]'\n    }, {\n        content: \"Open Users view\",\n        trigger: '[data-menu-xmlid=\"base.menu_action_res_users\"]',\n        run: function (helpers) {\n            // funny story: the users view we're trying to reach, sometimes we're\n            // already there, but if we re-click the next step executes before the\n            // action has the time to re-load, the one after that doesn't, and our\n            // selection get discarded by the action reloading, so here try to\n            // see if we're already on the users action through the breadcrumb and\n            // just close the menu if so\n            const $crumb = $('.breadcrumb');\n            if ($crumb.text().indexOf('Users') === -1) {\n                // on general settings page, click menu\n                helpers.click();\n            } else {\n                // else close menu\n                helpers.click($('[data-menu-xmlid=\"base.menu_users\"]'));\n            }\n        }\n    }];\n}\n\ntour.register('totp_admin_self_invite', {\n    test: true,\n    url: '/web'\n}, [tour.stepUtils.showAppsMenuItem(), ...openAccountSettingsTab(), {\n    content: \"open the user's form\",\n    trigger: \"td.o_data_cell:contains(admin)\",\n}, {\n    content: \"go to Account security Tab\",\n    trigger: \"a.nav-link:contains(Account Security)\",\n}, {\n    content: \"check that user cannot invite themselves to use 2FA.\",\n    trigger: \"body\",\n    run: function () {\n        const inviteBtn = $('button:contains(Invite to use 2FA)')[0];\n        if (!inviteBtn) {\n            $('body').addClass('CannotInviteYourself');\n        }\n    }\n}, {\n    content: \"check that user cannot invite themself.\",\n    trigger: \"body.CannotInviteYourself\"\n}]);\n\ntour.register('totp_admin_invite', {\n    test: true,\n    url: '/web'\n}, [tour.stepUtils.showAppsMenuItem(), ...openAccountSettingsTab(), {\n    content: \"open the user's form\",\n    trigger: \"td.o_data_cell:contains(demo)\",\n}, {\n    content: \"go to Account security Tab\",\n    trigger: \"a.nav-link:contains(Account Security)\",\n}, {\n    content: \"check that demo user can be invited to use 2FA.\",\n    trigger: \"button:contains(Invite to use 2FA)\",\n}]);\n\n});", "odoo.define('auth_totp_portal.tours', function(require) {\n\"use strict\";\n\nconst tour = require('web_tour.tour');\nconst ajax = require('web.ajax');\n\ntour.register('totportal_tour_setup', {\n    test: true,\n    url: '/my/security'\n}, [{\n    content: \"Open totp wizard\",\n    trigger: 'button#auth_totp_portal_enable',\n}, {\n    content: \"Check that we have to enter enhanced security mode\",\n    trigger: 'div:contains(\"enter your password\")',\n    run: () => {},\n}, {\n    content: \"Input password\",\n    trigger: '[name=password]',\n    run: 'text portal', // FIXME: better way to do this?\n}, {\n    content: \"Confirm\",\n    trigger: \"button:contains(Confirm Password)\",\n}, {\n    content: \"Check the wizard has opened\",\n    trigger: 'li:contains(\"scan the barcode below\")',\n    run: () => {}\n}, {\n    content: \"Get secret from collapsed div\",\n    trigger: 'a:contains(\"Cannot scan it?\")',\n    run: async function(helpers) {\n        const secret = this.$anchor.closest('div').find('span[name=\"secret\"]').text();\n        const token = await ajax.jsonRpc('/totphook', 'call', {\n            secret\n        });\n        helpers._text(helpers._get_action_values('input[name=code]'), token);\n        helpers._click(helpers._get_action_values('button.btn-primary:contains(Activate)'));\n    }\n}, {\n    content: \"Check that the button has changed\",\n    trigger: 'button:contains(Disable two-factor authentication)',\n    run: () => {}\n}]);\n\ntour.register('totportal_login_enabled', {\n    test: true,\n    url: '/'\n}, [{\n    content: \"check that we're on the login page or go to it\",\n    trigger: 'input#login, a:contains(Sign in)'\n}, {\n    content: \"input login\",\n    trigger: 'input#login',\n    run: 'text portal',\n}, {\n    content: 'input password',\n    trigger: 'input#password',\n    run: 'text portal',\n}, {\n    content: \"click da button\",\n    trigger: 'button:contains(\"Log in\")',\n}, {\n    content: \"expect totp screen\",\n    trigger: 'label:contains(Authentication Code)',\n}, {\n    content: \"input code\",\n    trigger: 'input[name=totp_token]',\n    run: async function (helpers) {\n        const token = await ajax.jsonRpc('/totphook', 'call', {});\n        helpers._text(helpers._get_action_values(), token);\n        // FIXME: is there a way to put the button as its own step trigger without\n        //        the tour straight blowing through and not waiting for this?\n        helpers._click(helpers._get_action_values('button:contains(\"Log in\")'));\n    }\n}, {\n    content: \"check we're logged in\",\n    trigger: \"h3:contains(Documents)\",\n    run: () => {}\n}, {\n    content: \"go back to security\",\n    trigger: \"a:contains(Security)\",\n},{\n    content: \"Open totp wizard\",\n    trigger: 'button#auth_totp_portal_disable',\n}, {\n    content: \"Check that we have to enter enhanced security mode\",\n    trigger: 'div:contains(\"enter your password\")',\n    run: () => {},\n}, {\n    content: \"Input password\",\n    trigger: '[name=password]',\n    run: 'text portal', // FIXME: better way to do this?\n}, {\n    content: \"Confirm\",\n    trigger: \"button:contains(Confirm Password)\",\n}, {\n    content: \"Check that the button has changed\",\n    trigger: 'button:contains(Enable two-factor authentication)',\n    run: () => {}\n}]);\n\ntour.register('totportal_login_disabled', {\n    test: true,\n    url: '/'\n}, [{\n    content: \"check that we're on the login page or go to it\",\n    trigger: 'input#login, a:contains(Sign in)'\n}, {\n    content: \"input login\",\n    trigger: 'input#login',\n    run: 'text portal',\n}, {\n    content: 'input password',\n    trigger: 'input#password',\n    run: 'text portal',\n}, {\n    content: \"click da button\",\n    trigger: 'button:contains(\"Log in\")',\n}, {\n    content: \"check we're logged in\",\n    trigger: \"h3:contains(Documents)\",\n    run: () => {}\n}]);\n});\n"], "file": "/web/assets/279-5cf6124/web.assets_tests.js", "sourceRoot": "../../../"}